
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
# library(devtools)
# devtools::install_github("SAlexHesp/L3AssessRPackage", build_vignettes=TRUE, force=TRUE)


# install.packages("C:/~/L4Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
rm(list=ls())
library(L4Assess)

setwd("C:/Users/ash/OneDrive - Department of Primary Industries and Regional Development/Desktop/Rachel BDM")


# set initial values of parameters to be estimated
nyrs = 44
ln_K = log(7800)
ln_r = log(0.5)
ln_q1 = -10
ln_q2 = -7
ln_q3 = -11
ln_q4 = NA
ln_sdmod1 = NA
ln_sdmod2 = NA
ln_sdmod3 = NA
ln_sdmod4 = NA
env_param = 0
lndep = -1
FF = rep(-2, nyrs)
EpsR = rep(0, times=nyrs)
ln_SigmaR = log(0.3)
# set bounds for parameters to be estimated
ln_K_bnds <- c(6,9)
ln_r_bnds <- log(c(0.01,1.5))
ln_q_params_bnds <- c(-20,0)
ln_sdmod_params_bnds <- c(-20,1)
env_param_bnds <- c(-20,20)
ln_dep_param_bnds <- c(-20,0)

bdm_params = Set_InitValsForBDM_Params(ln_K, ln_r, ln_q1, ln_q2, ln_q3, ln_q4,
                                         ln_sdmod1, ln_sdmod2, ln_sdmod3, ln_sdmod4,
                                         env_param, lndep, FF, EpsR, ln_SigmaR)
bdm_params

bdm_param_bounds = Set_BoundsForBDM_Params(ln_K_bnds, ln_r_bnds, ln_q_params_bnds, ln_sdmod_params_bnds,
                                  env_param_bnds, ln_dep_param_bnds)

param_low_bound_list = bdm_param_bounds$low_bound_list
param_upp_bound_list = bdm_param_bounds$upp_bound_list

# read in dat csv file to get rest of data
DatFromCSVFile <- read.csv("CS data for Biomass Dynamics model.csv", header=T)
wt_param_pen = 1.0
wt_expl_pen = 100.0
findepl_pen_opt = 1 # 0=don't use, 1=use (can assist with model convergence)
findepl_pen_upplim = 0.5 # upper limit for final depletion, if penalty applied
wt_findepl_pen = 1000.0
bdm_data = Get_BDM_Data(DatFromCSVFile, wt_param_pen, wt_expl_pen, findepl_pen_opt, findepl_pen_upplim, wt_findepl_pen)
bdm_data

mod_type = 1 # 1 = Schaefer, 2=Fox
mod_scenario = 2 # 1=non-state space, 2=state space
mod_option = 1 # 1=traditional, 2= +chl, 3= +dep, 3 = +chl and dep
nyrs = 44
bdm_map = Get_BDM_Map(mod_option, mod_scenario, nyrs)
bdm_map  

fit_the_model(
  mod_scenario,
  mod_type,
  mod_option,
  bdm_data,
  bdm_parameters,
  bdm_map = NULL,
  initial_params = NULL
)



