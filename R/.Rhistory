# get params - 2 sexes
InitFishMort = 0.3 # specify starting parameters
InitL50 = 320
InitDelta = 50 # L95-L50
InitLinf = c(800,800)
InitvbK = c(0.25,0.25)
InitCVSizeAtAge = 0.05
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform (so F is always between 0 and 1)
params = c(InitFishMort_logit, log(c(InitL50, InitDelta, InitLinf, InitvbK, InitCVSizeAtAge)))
FittedRes=GetAgeAndLengthBasedCatchCurveResults(params, RefnceAges, MLL, GrowthCurveType, SelectivityType, ObsRetCatchFreqAtLen, ObsRetCatchFreqAtLengthAndAge,
lbnd, ubnd, midpt, SelectivityAtLen, DiscMort, MaxAge, NatMort, TimeStep)
#
# # Example with specified selectivity vector
# # Simulate data
# SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logist sel curve, 3=separate logist sel params, common growth
# SelectivityAtLen = 1 / (1 + exp(-log(19)*(midpt-400)/(500-400)))
# SelParams = c(NA, NA) # L50, L95-L50 for gear selectivity
# RetenParams = c(NA, NA) # L50, L95-L50 for retention
# DiscMort = 0
# # single sex, von Bertalanffy
# GrowthCurveType = 1 # 1 = von Bertalanffy
# Linf = 800
# vbK = 0.2
# CVSizeAtAge = 0.05
# GrowthParams = c(Linf, vbK, CVSizeAtAge)
# RefnceAges = NA
# Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
#                          SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# lbnd=Res$lbnd
# midpt=Res$midpt
# ubnd=Res$ubnd
# # get data - 1 sex (or combined sexes)
# ObsRetCatchFreqAtLen = as.vector(Res$ObsRetCatchFreqAtLen) # 1 sex
# ObsRetCatchFreqAtLengthAndAge = as.matrix(Res$ObsRetCatchFreqAtLengthAndDecAge) # 1 sex
# # get params - 1 sex
# InitFishMort = 0.3 # specify starting parameters
# InitLinf = 800
# InitvbK = 0.2
# InitCVSizeAtAge = 0.05
# InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform (so F is always between 0 and 1)
# params = c(InitFishMort_logit, log(c(InitLinf, InitvbK, InitCVSizeAtAge)))
# FittedRes=GetAgeAndLengthBasedCatchCurveResults(params, RefnceAges, MLL, GrowthCurveType, SelectivityType, ObsRetCatchFreqAtLen, ObsRetCatchFreqAtLengthAndAge,
#                                                 lbnd, ubnd, midpt, SelectivityAtLen, DiscMort, MaxAge, NatMort, TimeStep)
PlotAgeLengthCatchCurve_Growth(params, RefnceAges, MLL, GrowthCurveType, SelectivityType, ObsRetCatchFreqAtLen, ObsRetCatchFreqAtLengthAndAge,
lbnd, ubnd, midpt, SelectivityAtLen, DiscMort, MaxAge, NatMort, TimeStep, MainLabel="Females",
xaxis_lab=NA, yaxis_lab=NA, xmax=40, xint=10,
ymax=1000, yint=200, PlotCLs=TRUE, FittedRes, nReps=200, ShowLegend=TRUE)
#' Get maximum and minimum x values and x interval
#'
#' Used for setting plot defaults
#'
#' @keywords internal
#'
#' @param x_data x axis data for plot
#'
#' @return list object with minimum and maximum x axis values and x axis interval
Get_xaxis_scale <- function(x_data) {
# modified from code provided by
# https://peltiertech.com/calculate-nice-axis-scales-in-excel-vba/
xmax_data = max(x_data)
xmin_data = min(x_data)
xpow = log10(xmax_data-xmin_data)
xint = 10 ^ (xpow-round(xpow,0))
if (xint>=0 & xint<2.5) xint = 0.2
if (xint>=2.5 & xint<5) xint = 0.5
if (xint>=5 & xint<7.5) xint = 1
if (xint>=7.5) xint = 2
xint = xint * 10^round(xpow,0) # major ticks
xmin = xint * round(xmin_data/xint,0)
xmax = xint * (round(xmax_data / xint,0) + 1)
results = list(xmin = xmin,
xmax = xmax,
xint = xint)
}
#' Get maximum and minimum y values and y interval
#'
#' Used for setting plot defaults
#'
#' @keywords internal
#'
#' @param y_data y axis data for plot
#'
#' @return list object with minimum and maximum y axis values and y axis interval
Get_yaxis_scale <- function(y_data) {
# modified from code provided by
# https://peltiertech.com/calculate-nice-axis-scales-in-excel-vba/
ymax_data = max(1.1 * y_data)
ymin_data = min(y_data)
ypow = log10(ymax_data-ymin_data)
yint = 10 ^ (ypow-round(ypow,0))
if (yint>=0 & yint<2.5) yint = 0.2
if (yint>=2.5 & yint<5) yint = 0.5
if (yint>=5 & yint<7.5) yint = 1
if (yint>=7.5) yint = 2
yint = yint * 10^round(ypow,0) # major ticks
ymin = yint * round(ymin_data/yint,0)
ymax = yint * (round(ymax_data / yint,0) + 1)
results = list(ymin = ymin,
ymax = ymax,
yint = yint)
}
#' @param ymin y axis minimum
#' @param ymax y axis maximum
#' @param yint y axis tick interval
#' @param cexval label size
#' @param cexaxisval axis size
#' @param lwdval line widths
#' @param lineval axis offset
#' @param lasval axis orientation
#'
#' @return adds axes to plots
AddAxesAndTickLabelsToPlot <- function(xmin, xmax, xint, ymin, ymax, yint, cexval, cexaxisval, lwdval, lineval, lasval) {
if (is.na(xmin)) xmin=0
if (is.na(ymin)) ymin=0
if (is.na(cexval)) cexval=1
if (is.na(cexaxisval)) cexaxisval=1
if (is.na(lwdval)) lwdval=1
if (is.na(lasval)) lasval=1
if (is.na(lineval)) lineval=0
axis(1, at = seq(xmin, xmax, xint), line = lineval, labels = F)
axis(2, at = seq(ymin, ymax, yint), line = lineval, labels = F)
axis(1, at = seq(xmin, xmax, xint), lwd=lwdval, labels=T, line=lineval, cex=cexval, cex.axis=cexaxisval, las=lasval)
axis(2, at = seq(ymin, ymax, yint), lwd=lwdval, labels=T, line=lineval, cex=cexval, cex.axis=cexaxisval, las=lasval)
}
library(L3Assess)
# Simulate data
set.seed(123)
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(400, 50) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
SimRes=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# plot data
PlotOpt=0 # 0=all plots, 1=retained lengths at age and growth curves, 2=retained plus discard lengths at age
# and growth curves, 3=retained plus discard length frequency, 4=retained plus discard age frequency,
# 5=sex specific retained lengths at age and growth curves, 6=retained plus discard lengths at age and growth curves,
# 7=female length frequency, 8=male length frequency, 9=female age frequency, 10=male age frequency,
# 11=selectivity/retention, 12=F-at-age reten + disc, 13=F-at-age reten, 14=F-at-age disc
PlotSimLenAndAgeFreqData_EqMod(MaxAge, MaxLen, SimRes, PlotOpt)
library(L3Assess)
# Simulate data
set.seed(123)
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(400, 50) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
SimRes=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# plot data
PlotOpt=0 # 0=all plots, 1=retained lengths at age and growth curves, 2=retained plus discard lengths at age
# and growth curves, 3=retained plus discard length frequency, 4=retained plus discard age frequency,
# 5=sex specific retained lengths at age and growth curves, 6=retained plus discard lengths at age and growth curves,
# 7=female length frequency, 8=male length frequency, 9=female age frequency, 10=male age frequency,
# 11=selectivity/retention, 12=F-at-age reten + disc, 13=F-at-age reten, 14=F-at-age disc
PlotSimLenAndAgeFreqData_EqMod(MaxAge, MaxLen, SimRes, PlotOpt)
library(L3Assess)
# Simulate data
set.seed(123)
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(400, 50) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
SimRes=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# plot data
PlotOpt=0 # 0=all plots, 1=retained lengths at age and growth curves, 2=retained plus discard lengths at age
# and growth curves, 3=retained plus discard length frequency, 4=retained plus discard age frequency,
# 5=sex specific retained lengths at age and growth curves, 6=retained plus discard lengths at age and growth curves,
# 7=female length frequency, 8=male length frequency, 9=female age frequency, 10=male age frequency,
# 11=selectivity/retention, 12=F-at-age reten + disc, 13=F-at-age reten, 14=F-at-age disc
PlotSimLenAndAgeFreqData_EqMod(MaxAge, MaxLen, SimRes, PlotOpt)
# and growth curves, 3=retained plus discard length frequency, 4=retained plus discard age frequency,
# 5=sex specific retained lengths at age and growth curves, 6=retained plus discard lengths at age and growth curves,
# 7=female length frequency, 8=male length frequency, 9=female age frequency, 10=male age frequency,
# 11=selectivity/retention, 12=F-at-age reten + disc, 13=F-at-age reten, 14=F-at-age disc
PlotSimLenAndAgeFreqData(MaxAge, MaxLen, SimRes, PlotOpt)
# For Charlotte
# Alex Hesp 26/2/2025
# Suggested approch to overcome issue that catch curve model required input for 'discarded' and
# 'retained' fish categories, but BRUV data records just sizes of fish, including fish of sizes
# that, if encountered by a fisher, would be discarded (if small), or retained (if not too small).
rm(list=ls())
library(L3Assess)
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# if installing from github
# library(devtools)
# devtools::install_github("SAlexHesp/L3AssessRPackage", build_vignettes=TRUE, force=TRUE)
# simulate length data for stock
MaxAge = 40
MaxObsAge = 40 # max model age
TimeStep = 1/12 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort =  0.12 #exp(1.551-1.066*log(11.8))
MaxLen = 1300
LenInc = 20
lbnd = seq(0,MaxLen-LenInc,LenInc)
midpt = lbnd + LenInc/2
ubnd = lbnd + LenInc
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 1136
vbK = 0.12
CVSizeAtAge = 0.02 # *** given short time step, reduced a bit
GrowthParams = c(Linf, vbK)
RefnceAges = NA
FishMort = 0.67*NatMort #0.67*NatMort #1.5*NatMort
PropReleased = NA
SelParams = c(200, 50)
Ret_95 = Linf*0.5
Ret_Delta = 50
RetenParams = c(Ret_95-Ret_Delta, Ret_Delta)
# generate line fishing data
MLL=NA
SampleSize = 5000 # sample size is for retained fish
Res_line=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType, SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
lendat_line = Res_line$ObsRetCatchFreqAtLen
lendat_line2 = Res_line$ObsDiscCatchFreqAtLen
# generate BRUV data using the parameters above
MLL=NA
Res_bruv=SimLenAndAgeFreqData_EqMod(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType, SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# check growth
par(mfrow=c(2,2))
plot(Res_bruv$ObsDecAgeRetCatch, Res_bruv$ObsRandLenRetCatch, xlim=c(0,40), ylim=c(0,1400))
points(Res_bruv$ObsDecAgeDiscCatch, Res_bruv$ObsRandLenDiscCatch, col="grey")
lendat_bruv1 = Res_bruv$ObsRetCatchFreqAtLen # Retained by line fishing
lendat_bruv2 = Res_bruv$ObsDiscCatchFreqAtLen # Fish that are selected but then discarded, what we would see on the stereo-BRUVs
lendat_bruv3 = lendat_bruv1 + lendat_bruv2
# line data
plot(midpt, lendat_bruv1, "l")
lines(midpt, lendat_bruv2, "l")
lines(midpt, lendat_bruv3, "l", col="blue")
# Fit to simulated line data
ObsRetCatchFreqAtLen  = lendat_line
DistnType = 1 # 1 = Multinomial, 2 = Dirichlet multinomial
ObsDiscCatchFreqAtLen = NA # (or set to Res$ObsDiscCatchFreqAtLen)
RetenAtLen = NA
PropReleased=NA
MLL=NA
# Set selectivity (retention paramaters) for line fishing
InitL50 = 500
InitDelta = 25
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes_line=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen, lbnd, ubnd, midpt, SelectivityAtLen, RetenAtLen, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes_line$ParamEst
# Estimate lw_95%CL up_95%CL
# FMort        0.082    0.074    0.091
# L50_sel    518.564  514.172  522.993
# Delta_sel   50.499   44.469   57.346
# true retention params
# RetenParams
# [1] 518  50
# True Fmort
# FishMort = 0.67*NatMort
# [1] 0.0804
# for BRUV sampling, obviously, no fish are retained or discarded. But depending on its size,
# a fish has a certain probability of being retained by a fisher if caught by line, and also,
# of being seen by a BRUV given its size.
# So, effectively, can separate fish into two categories, 1) fish observed by the BRUV gear but would
# be discarded if caught by line, and 2) fish observed by the BRUV gear and would be retained if caught by line
# Will suggest how to do this in a minute, but first, check that catch curve returns expected results
# if we do it
# Fit LBCC to simulated stereo-BRUV data
# inputting data for discarded and retained catches, and estimating gear selectivity, retention parameters, and F
# For now, don't have a method that whereby retention curve can be specified and just estimate selectivity parameters,
# so need to re-estimate retention parameters
ObsRetCatchFreqAtLen  = lendat_bruv1 # Retained "catch"
ObsDiscCatchFreqAtLen = lendat_bruv2 # Discarded "catch
InitL50 = 200 # selectivity of the stereo-BRUVs
InitDelta = 25 # selectivity of the stereo-BRUVs
InitL502 = 500 # retention param
InitDelta2 = 25 # retention param
params = c(InitFishMort_logit, log(InitL50), log(InitDelta), log(InitL502), log(InitDelta2))
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityAtLen, RetenAtLen, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes$ParamEst
# Estimate lw_95%CL up_95%CL
# FMort        0.085    0.077    0.093
# L50_sel    203.513  198.521  208.631
# Delta_sel   47.124   39.589   56.094
# L50_ret    517.446  514.682  520.224
# Delta_ret   50.054   45.973   54.496
# now, method to separate BRUV data into the 2 categories
# get retention curve
L50_Ret = FittedRes_line$ParamEst[2,1] # Here saying that "retention" is the fish that get caught by the fishing gear so where mortality would be applied
L95_Ret =  FittedRes_line$ParamEst[3,1] + L50_Ret
RetenAtLen = 1 / (1+exp(-log(19)*(midpt-L50_Ret)/(L95_Ret-L50_Ret)))
# BRUV data containing fish of all sizes observed by the gear - lendat_bruv3
# expand out lengths in BRUV data
nLenCl = length(midpt)
BRUVlengths <- rep(midpt,lendat_bruv3)
# head(BRUVlengths)
# tail(BRUVlengths)
# randomly assign each fish to one of 2 categories, 1=retained, 2=discarded (i.e. if those fish were to be subsequently caught by line),
# i.e. what you would do with your 'real', observed bruv data
FishCat = rep(NA,length(BRUVlengths))
ObsRetCatchFreqAtLen <- rep(0,nLenCl)
ObsDiscCatchFreqAtLen <- rep(0,nLenCl)
for (i in 1:length(BRUVlengths)) {
randnum = runif(1,0,1)
FishLenCl = which(midpt==BRUVlengths[i])
if (randnum <= RetenAtLen[FishLenCl]) {
ObsRetCatchFreqAtLen[FishLenCl] =   ObsRetCatchFreqAtLen[FishLenCl] + 1
} else {
ObsDiscCatchFreqAtLen[FishLenCl] =   ObsDiscCatchFreqAtLen[FishLenCl] + 1
}
}
# compare randomly-assigned data, to known frequencies for each category, from simulation model,
# to check that random assignment method is reliable
par(mfrow=c(2,2),mar=c(4,3,2,2))
plot(midpt, lendat_bruv1, "l") # original - separated out in simulation
lines(midpt, ObsRetCatchFreqAtLen, col="blue") # randomly assignedm from combined samples in simulation
plot(midpt, lendat_bruv2, "l") # retained
lines(midpt, ObsDiscCatchFreqAtLen, col="blue")
# ObsRetCatchFreqAtLen  = lendat_bruv1 # Retained "catch"
# ObsDiscCatchFreqAtLen = lendat_bruv2 # Discarded "catch
ObsRetCatchFreqAtLen = lendat_bruv1 + lendat_bruv2
plot(midpt, ObsRetCatchFreqAtLen, "l") # total
plot(midpt, RetenAtLen, "l")
InitL50 = 200 # selectivity of the stereo-BRUVs
InitDelta = 25 # selectivity of the stereo-BRUVs
params = c(InitFishMort_logit, log(InitL50), log(InitDelta), log(InitL502), log(InitDelta2))
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityAtLen, RetenAtLen, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
RetenAtLen
ObsRetCatchFreqAtLen
params
library(L3Assess)
as.expression(Fest), L50est, L95est)
library(L3Assess)
# Simulate data from Multinomial distribution (single sex)
set.seed(123)
MinAge = 1
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData_EqMod(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
# Simulate data from Multinomial distribution (single sex)
set.seed(123)
MinAge = 1
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData_EqMod(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
# Specify catch curve model and required inputs for that model
CatchCurveModel = 1 # Chapman Robson
NatMort = NA # Chapman Robson
RecAssump = 1 # Chapman Robson
MinFreq = NA # Chapman Robson
# CatchCurveModel = 3 # Logistic selectivity
# RecAssump = NA # Logistic selectivity
# NatMort = 0.104 # Logistic selectivity
# MinFreq = NA # # Logistic selectivity
# Init_FMort = 0.2
# Init_SelA50 = 5
# Init_SelDelta = 2
# params = log(c(Init_FMort, Init_SelA50, Init_SelDelta))
# res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
# res$ParamEst
PlotAgeBasedCatchCurveResults_NormalSpace(RecAssump, SpecRecAge=NA, MinFreq, MinAge, MaxAge, NatMort,
ObsAgeFreq, CatchCurveModel, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=NA, xint=NA,
ymax=NA, yint=NA, PlotCLs=T)
# Simulate data from Multinomial distribution (single sex)
set.seed(123)
MinAge = 2
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData_EqMod(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
# Specify catch curve model and required inputs for that model
CatchCurveModel = 1 # Chapman Robson
NatMort = NA # Chapman Robson
RecAssump = 1 # Chapman Robson
MinFreq = NA # Chapman Robson
# CatchCurveModel = 3 # Logistic selectivity
# RecAssump = NA # Logistic selectivity
# NatMort = 0.104 # Logistic selectivity
# MinFreq = NA # # Logistic selectivity
# Init_FMort = 0.2
# Init_SelA50 = 5
# Init_SelDelta = 2
# params = log(c(Init_FMort, Init_SelA50, Init_SelDelta))
# res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
# res$ParamEst
PlotAgeBasedCatchCurveResults_NormalSpace(RecAssump, SpecRecAge=NA, MinFreq, MinAge, MaxAge, NatMort,
ObsAgeFreq, CatchCurveModel, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=NA, xint=NA,
ymax=NA, yint=NA, PlotCLs=T)
# MinAge = 2
# MaxAge = 40
# Ages = MinAge:MaxAge
# NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
# FMort = 0.1
# ZMort = FMort + NatMort
# SelA50 = 6
# SelA95 = 8
# SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
# Res=SimAgeFreqData_EqMod(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
ObsAgeFreq
library(L3Assess)
# Simulate data from Multinomial distribution (single sex)
set.seed(123)
MinAge = 2
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData_EqMod(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
# Specify catch curve model and required inputs for that model
ObsAgeFreq = as.vector(unlist(Res$CatchSample))
res=GetChapmanRobsonMortalityResults(RecAssump=1, SpecRecAge=NA, MinAge, MaxAge, ObsAgeFreq)
# Specify catch curve model and required inputs for that model
plot(ObsAgeFreq)
res=GetChapmanRobsonMortalityResults(RecAssump=NA, SpecRecAge=9, MinAge, MaxAge, ObsAgeFreq)
res=GetChapmanRobsonMortalityResults(RecAssump=1, SpecRecAge=9, MinAge, MaxAge, ObsAgeFreq)
res
CatchCurveModel = 1 # Chapman Robson
NatMort = NA # Chapman Robson
RecAssump = 1 # Chapman Robson
MinFreq = NA # Chapman Robson
PlotAgeBasedCatchCurveResults_NormalSpace(RecAssump=1, SpecRecAge=9, MinFreq, MinAge, MaxAge, NatMort,
ObsAgeFreq, CatchCurveModel, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=NA, xint=NA,
ymax=NA, yint=NA, PlotCLs=T)
ObsAgeFreq = as.vector(unlist(Res$CatchSample))
res=GetChapmanRobsonMortalityResults(RecAssump=1, SpecRecAge=15, MinAge, MaxAge, ObsAgeFreq)
CatchCurveModel = 1 # Chapman Robson
NatMort = NA # Chapman Robson
RecAssump = 1 # Chapman Robson
MinFreq = NA # Chapman Robson
PlotAgeBasedCatchCurveResults_NormalSpace(RecAssump=1, SpecRecAge=15, MinFreq, MinAge, MaxAge, NatMort,
ObsAgeFreq, CatchCurveModel, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=NA, xint=NA,
ymax=NA, yint=NA, PlotCLs=T)
