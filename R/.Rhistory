LenInc = 50
MLL = 500
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 300 # selectivity
L95 = 350 # selectivity
SelectivityVec = NA
DiscMort = 0.25
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 1150
vbK = 0.12
CVSizeAtAge = 0.05
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
plot(Res$midpt, Res$DiscCatchAtLen, "o")
Res$PropReleased
PropReleased = sum(Res$DiscCatchAtLen) / sum(Res$TotCatchAtLen)
PropReleased_sd = sqrt(PropReleased * (1 - PropReleased))/SampleSize
# approximation of sd, based on se of sample proportion
MeanLenReleased = sum((Res$DiscCatchAtLen * Res$midpt)) / sum(Res$DiscCatchAtLen)
MeanLenReleased_sd = sqrt((sum(Res$DiscCatchAtLen * (Res$midpt^2)) / sum(Res$DiscCatchAtLen)) - MeanLenReleased^2)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
length(midpt)
PropReleased = c(PropReleased,PropReleased_sd) # NA # vector including mean and sd
MeanLenReleased = c(MeanLenReleased,MeanLenReleased_sd) # vector including mean and sd (note, this is sd for size distribution, not sd for estimate of mean)
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 350
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, MeanLenReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes$ParamEst
FittedRes$nll
FittedRes$EstPropReleased
FittedRes$ExpMeanLenReleased
par(mfrow=c(1,1))
PlotLengthBasedCatchCurve_RetCatch(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt,
SelectivityVec, PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, MaxAge, NatMort, TimeStep, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=1500, xint=500,
ymax=0.5, yint=0.05, PlotCLs=TRUE, FittedRes, nReps=200)
PlotLengthBasedCatchCurve_Selectivity(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt, SelectivityVec,
PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges,
MaxAge, NatMort, TimeStep, MainLabel=NA, xaxis_lab=NA, yaxis_lab=NA, xmax=1200, xint=200,
ymax=1.0, yint=0.2, PlotCLs=TRUE, FittedRes, nReps=200)
PlotLengthBasedCatchCurve_Mortality(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt, SelectivityVec,
PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges,
MaxAge, NatMort, TimeStep, xmax=NA, xint=NA, ymax=NA, yint=NA, FittedRes)
dat = read.csv("Snapper_Western Australia_Charter_2019.csv",header=T)
ObsCatchFreqAtLen = dat$freq
midpt = dat$midpt
MaxAge = 40
# Simulate data
SampleSize=1000
set.seed(123)
MaxAge = 40
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.15
MaxLen = 1500
LenInc = 50
MLL = 500
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 300 # selectivity
L95 = 350 # selectivity
SelectivityVec = NA
DiscMort = 0.25
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 1150
vbK = 0.12
CVSizeAtAge = 0.05
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
plot(Res$midpt, Res$DiscCatchAtLen, "o")
Res$PropReleased
PropReleased = sum(Res$DiscCatchAtLen) / sum(Res$TotCatchAtLen)
PropReleased_sd = sqrt(PropReleased * (1 - PropReleased))/SampleSize
# approximation of sd, based on se of sample proportion
MeanLenReleased = sum((Res$DiscCatchAtLen * Res$midpt)) / sum(Res$DiscCatchAtLen)
MeanLenReleased_sd = sqrt((sum(Res$DiscCatchAtLen * (Res$midpt^2)) / sum(Res$DiscCatchAtLen)) - MeanLenReleased^2)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
length(midpt)
PropReleased = c(PropReleased,PropReleased_sd) # NA # vector including mean and sd
MeanLenReleased = c(MeanLenReleased,MeanLenReleased_sd) # vector including mean and sd (note, this is sd for size distribution, not sd for estimate of mean)
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 350
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, MeanLenReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes$ParamEst
FittedRes$nll
FittedRes$EstPropReleased
FittedRes$ExpMeanLenReleased
par(mfrow=c(1,1))
PlotLengthBasedCatchCurve_RetCatch(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt,
SelectivityVec, PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, MaxAge, NatMort, TimeStep, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=1500, xint=500,
ymax=0.5, yint=0.05, PlotCLs=TRUE, FittedRes, nReps=200)
# Simulate data
set.seed(123)
SampleSize=5000
MaxAge = 26
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
MinAge = floor(TimeStep)
nAgeCl = length(MinAge:MaxAge)
nTimeSteps = length(seq(TimeStep,MaxAge,TimeStep))
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1100
LenInc = 10
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified is knife-edged at MLL
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityVec = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(NA, NA) # L50, L95 for retention
DiscMort = 0
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK, CVSizeAtAge)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
SelParams, RetenParams, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
library(L3Assess)
MaxModelAge <- 20 # maximum age considered by model, years
TimeStep <- 1 # Model time step (y) (for shorter-lived species, might be appropriate to use a smaller time step)
MaxLen = 800
LenInc = 20
lbnd = seq(0,MaxLen - LenInc, LenInc)
ubnd = lbnd + LenInc
midpt = lbnd + (LenInc/2)
nLenCl = length(midpt)
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf <- c(550, 500) # mm - von Bertalanffy growth model parameters - Females, males
vbK <- c(0.2, 0.2) # year-1 - von Bertalanffy growth model parameters - Females, males
tzero <- c(0, 0) # years - von Bertalanffy growth model parameters - Females, males
GrowthParams = data.frame(Linf=Linf, vbK=vbK, tzero=tzero)
RefnceAges = NA
# GrowthParams c(Linf, vbK, tzero) single sex von Bertalanffy, or data.frame(Linf=Linf, vbK=vbK, tzero=tzero),
#' both sexes von Bertalanffy, or c(y1, y2, a, b) single sex Schnute, or data.frame(y1=y1, y2=y2, a=a, b=b), both sexes Schnute
CVSizeAtAge = c(0.05,0.05)
lenwt_a <- 0.000005 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
ln_lenwt_a <- NA # for log-log relationship
lenwt_b <- 3 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
WLrel_Type <- 1 # 1=power, 2=log-log relationship
EstWtAtLen <- data.frame(EstFemWtAtLen=NA,
EstMalWtAtLen=NA) # weight at age (from age 0), inputted as values in data frame
ReprodScale <- 1 # 1=default (standard calculations for spawning biomass), 2=hyperallometric reproductive scaling with female mass (i.e. BOFFF effects)
ReprodPattern <- 1 # 1 = gonochoristic (separate sexes), 2 = protogynous (female to male sex change), 3 = protandrous (male to female sex change)
InitRatioFem <- 0.5 # Ratio of females to males at age zero
FinalSex_Pmax <- NA # Logistic sex change relationship parameters (max probability of final sex)
FinalSex_L50 <- NA # Logistic sex change relationship parameters (inflection point)
FinalSex_L95 <- NA # Logistic sex change relationship parameters (95% of max probability)
mat_L50 <- c(250, 250) # females, males - Logistic length (mm) at maturity relationship parameters
mat_L95 <- c(300, 300) # females, males - Logistic length (mm) at maturity relationship parameters
EstMatAtLen <- data.frame(EstFemMatAtLen=NA,
EstMalMatAtLen=NA) # maturity at age (from age 0), inputted as values in data frame
sel_L50 <- c(250, 250) # females, males - Logistic age selectivity relationship parameters
sel_L95 <- c(300, 300) # females, males - Logistic age selectivity relationship parameters
ret_Pmax <- c(1.0, 1.0) # maximum retention, values lower than 1 imply discarding of fish above MLL
ret_L50 <- c(250, 250) # females, males - Logistic age fish retention at age parameters
ret_L95 <- c(300, 300) # females, males - Logistic age fish retention at age parameters
DiscMort <- 0.25 # discard mortality (e.g. 50% released fish die = 0.5)
Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
NatMort = 4.22 / MaxModelAge # natural mortality  (year-1)
Current_F = 0.2
Res=GetPerRecruitResults_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, Current_F)
## Can get male and combined sex SPR
Res$Fem_SPR
Res$CombSex_SPR
Res$Mal_SPR
Res$Equilmod_FemRelBiom
Res$Equilmod_FemRelBiomResults
Res$Equilmod_MalRelBiom
Res$Equilmod_CombSexRelBiom
# Save key outputs (median and 95% confidence levels)
EstMedFemSPR = round(median(Fem_SPR_Vals),3)
EstLow95FemSPR = as.numeric(round(quantile(Fem_SPR_Vals, 0.025),3))
EstUp95FemSPR = as.numeric(round(quantile(Fem_SPR_Vals, 0.975),3))
EstFemSPR = data.frame(EstMedFemSPR=EstMedFemSPR,
EstLow95FemSPR=EstLow95FemSPR,
EstUp95FemSPR=EstUp95FemSPR)
Res=GetPerRecruitResults_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, Current_F)
#Try again with version error
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
Steepness_sd <- 0.025
NatMort <- 0.2 # natural mortality  (year-1)
NatMort_sd <- 0.025
Current_F <- 0.1 # estimate of fishing mortality, e.g. from catch curve analysis
Current_F_sd <- 0.005
nReps = 10
nReps = 2
FValues = rnorm(nReps, Current_F, Current_F_sd)
hValues = rnorm(nReps, Steepness, Steepness_sd)
MValues = rnorm(nReps, NatMort, NatMort_sd)
for (i in 1:nReps) {
FMort = FValues[i]
Steepness = hValues[i]
NatMort = MValues[i]
PREst = GetPerRecruitResults_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, Current_F)
if (i == 1) {
Fem_SPR_Vals = rep(0, nReps)
Mal_SPR_Vals = rep(0, nReps)
CombSex_SPR_Vals = rep(0, nReps)
Equil_RelFemSpBiom_Vals = rep(0, nReps)
Equil_RelMalSpBiom_Vals = rep(0, nReps)
Equil_RelCombSexSpBiom_Vals = rep(0, nReps)
BMSY_Vals = rep(0,nReps)
Sim_FemSPR = data.frame(matrix(nrow=nReps, ncol=length(PREst$FishMort)))
colnames(Sim_FemSPR) = PREst$FishMort
Sim_Equil_RelFemSpBiom = as.matrix(Sim_FemSPR)
}
Fem_SPR_Vals[i] = PREst$Fem_SPR
Mal_SPR_Vals[i] = PREst$Mal_SPR
CombSex_SPR_Vals[i] = PREst$CombSex_SPR
Equil_RelFemSpBiom_Vals[i] = PREst$Equilmod_FemRelBiom
Equil_RelMalSpBiom_Vals[i] = PREst$Equilmod_MalRelBiom
Equil_RelCombSexSpBiom_Vals[i] = PREst$Equilmod_CombSexRelBiom
BMSY_Vals[i] = PREst$BMSY_Thresh
Sim_FemSPR[i,] = PREst$Fem_SPRResults
Sim_Equil_RelFemSpBiom[i,] = PREst$Equilmod_FemRelBiomResults
cat("i",i,'\n')
}
# Save key outputs (median and 95% confidence levels)
EstMedFemSPR = round(median(Fem_SPR_Vals),3)
EstLow95FemSPR = as.numeric(round(quantile(Fem_SPR_Vals, 0.025),3))
EstUp95FemSPR = as.numeric(round(quantile(Fem_SPR_Vals, 0.975),3))
EstFemSPR = data.frame(EstMedFemSPR=EstMedFemSPR,
EstLow95FemSPR=EstLow95FemSPR,
EstUp95FemSPR=EstUp95FemSPR)
EstMedMalSPR = round(median(Mal_SPR_Vals),3)
EstLow95MalSPR = as.numeric(round(quantile(Mal_SPR_Vals, 0.025),3))
EstUp95MalSPR = as.numeric(round(quantile(Mal_SPR_Vals, 0.975),3))
EstMalSPR = data.frame(EstMedMalSPR=EstMedMalSPR,
EstLow95MalSPR=EstLow95MalSPR,
EstUp95MalSPR=EstUp95MalSPR)
EstMedCombSexSPR = round(median(CombSex_SPR_Vals),3)
EstLow95CombSexSPR = as.numeric(round(quantile(CombSex_SPR_Vals, 0.025),3))
EstUp95CombSexSPR = as.numeric(round(quantile(CombSex_SPR_Vals, 0.975),3))
EstCombSexSPR = data.frame(EstMedCombSexSPR=EstMedCombSexSPR,
EstLow95CombSexSPR=EstLow95CombSexSPR,
EstUp95CombSexSPR=EstUp95CombSexSPR)
EstMedEquilRelFemSpBiom = round(median(Equil_RelFemSpBiom_Vals),3)
Low95EquilRelFemSpBiom = as.numeric(round(quantile(Equil_RelFemSpBiom_Vals, 0.025),3))
Upp95EquilRelFemSpBiom = as.numeric(round(quantile(Equil_RelFemSpBiom_Vals, 0.975),3))
EstEquilRelFemSpBiom = data.frame(EstMedEquilRelFemSpBiom=EstMedEquilRelFemSpBiom,
Low95EquilRelFemSpBiom=Low95EquilRelFemSpBiom,
Upp95EquilRelFemSpBiom=Upp95EquilRelFemSpBiom)
EstMedEquilRelMalSpBiom = round(median(Equil_RelMalSpBiom_Vals),3)
Low95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.025),3))
Upp95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.975),3))
EstEquilRelMalSpBiom = data.frame(EstMedEquilRelMalSpBiom=EstMedEquilRelMalSpBiom,
Low95EquilRelMalSpBiom=Low95EquilRelMalSpBiom,
EstEquilRelMalSpBiom=EstEquilRelMalSpBiom)
EstMedEquilRelCombSexSpBiom = round(median(Equil_RelCombSexSpBiom_Vals),3)
EstMedEquilRelMalSpBiom = round(median(Equil_RelMalSpBiom_Vals),3)
EstMedEquilRelMalSpBiom
Low95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.025),3))
Upp95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.975),3))
EstMedEquilRelMalSpBiom
Low95EquilRelMalSpBiom
EstEquilRelMalSpBiom
Upp95EquilRelMalSpBiom
EstMedEquilRelMalSpBiom = round(median(Equil_RelMalSpBiom_Vals),3)
Low95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.025),3))
Upp95EquilRelMalSpBiom = as.numeric(round(quantile(Equil_RelMalSpBiom_Vals, 0.975),3))
EstEquilRelMalSpBiom = data.frame(EstMedEquilRelMalSpBiom=EstMedEquilRelMalSpBiom,
Low95EquilRelMalSpBiom=Low95EquilRelMalSpBiom,
Upp95EquilRelMalSpBiom=Upp95EquilRelMalSpBiom)
EstMedEquilRelCombSexSpBiom = round(median(Equil_RelCombSexSpBiom_Vals),3)
Low95EquilRelCombSexSpBiom = as.numeric(round(quantile(Equil_RelCombSexSpBiom_Vals, 0.025),3))
Upp95EquilRelCombSexSpBiom = as.numeric(round(quantile(Equil_RelCombSexSpBiom_Vals, 0.975),3))
EstEquilRelCombSexSpBiom = data.frame(EstMedEquilRelCombSexSpBiom=EstMedEquilRelCombSexSpBiom,
Low95EquilRelCombSexSpBiom=Low95EquilRelCombSexSpBiom,
Upp95EquilRelCombSexSpBiom=Upp95EquilRelCombSexSpBiom)
EstMedBMSYratio = round(median(BMSY_Vals),3)
Low95EstBMSYratio = as.numeric(round(quantile(BMSY_Vals, 0.025),3))
Upp95EstBMSYratio = as.numeric(round(quantile(BMSY_Vals, 0.975),3))
ResSummary_with_err <- data.frame(EstMedFemSPR, EstLow95FemSPR, EstUp95FemSPR,
EstMedMalSPR, EstLow95MalSPR, EstUp95MalSPR,
EstMedCombSexSPR, EstLow95CombSexSPR, EstUp95CombSexSPR,
EstMedEquilRelFemSpBiom, Low95EquilRelFemSpBiom, Upp95EquilRelFemSpBiom,
EstMedEquilRelMalSpBiom, Low95EquilRelMalSpBiom, Upp95EquilRelMalSpBiom,
EstMedEquilRelCombSexSpBiom, Low95EquilRelCombSexSpBiom, Upp95EquilRelCombSexSpBiom,
EstMedBMSYratio, Low95EstBMSYratio, Upp95EstBMSYratio)
colnames(ResSummary_with_err)=c("Fem_SPR", "Fem_LowSPR", "Fem_UppSPR",
"Mal_SPR", "Mal_LowSPR", "Mal_UppSPR",
"CombSex_SPR", "CombSex_LowSPR", "CombSex_UppSPR",
"Fem_EquilSB", "Fem_LowEquilSB", "Fem_UppEquilSB",
"Mal_EquilSB", "Mal_LowEquilSB", "Mal_UppEquilSB",
"CombSex_EquilSB", "CombSex_LowEquilSB", "CombSex_UppEquilSB",
"BMSYratio")
Results = list(PerRec_FValues = PREst$FishMort,
Fem_SPR_Vals=Fem_SPR_Vals,
Equil_RelFemSpBiom_Vals=Equil_RelFemSpBiom_Vals,
BMSY_Vals=BMSY_Vals,
Sim_FemSPR=Sim_FemSPR,
Sim_Equil_RelFemSpBiom=Sim_Equil_RelFemSpBiom,
EstFemSPR=EstFemSPR,
EstMalSPR=EstMalSPR,
EstCombSexSPR=EstCombSexSPR,
EstEquilRelFemSpBiom=EstEquilRelFemSpBiom,
EstEquilRelMalSpBiom=EstEquilRelMalSpBiom,
EstEquilRelCombSexSpBiom=EstEquilRelCombSexSpBiom,
EstMedBMSYratio=EstMedBMSYratio,
ResSummary_with_err=ResSummary_with_err)
Results
colnames(ResSummary_with_err)=c("Fem_SPR", "Fem_LowSPR", "Fem_UppSPR",
"Mal_SPR", "Mal_LowSPR", "Mal_UppSPR",
"CombSex_SPR", "CombSex_LowSPR", "CombSex_UppSPR",
"Fem_EquilSB", "Fem_LowEquilSB", "Fem_UppEquilSB",
"Mal_EquilSB", "Mal_LowEquilSB", "Mal_UppEquilSB",
"CombSex_EquilSB", "CombSex_LowEquilSB", "CombSex_UppEquilSB",
"BMSYratio", "BMSYratio_Low", "BMSYratio_Upp")
ResSummary_with_err
Results = list(PerRec_FValues = PREst$FishMort,
Fem_SPR_Vals=Fem_SPR_Vals,
Equil_RelFemSpBiom_Vals=Equil_RelFemSpBiom_Vals,
BMSY_Vals=BMSY_Vals,
Sim_FemSPR=Sim_FemSPR,
Sim_Equil_RelFemSpBiom=Sim_Equil_RelFemSpBiom,
EstFemSPR=EstFemSPR,
EstMalSPR=EstMalSPR,
EstCombSexSPR=EstCombSexSPR,
EstEquilRelFemSpBiom=EstEquilRelFemSpBiom,
EstEquilRelMalSpBiom=EstEquilRelMalSpBiom,
EstEquilRelCombSexSpBiom=EstEquilRelCombSexSpBiom,
EstMedBMSYratio=EstMedBMSYratio,
ResSummary_with_err=ResSummary_with_err)
Results
# Preliminary analysis, exploring impacts of different catch levels on
# stock abundance, and sizes of fish in catches
# Alex Hesp
# 7/6/2023
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# library(devtools)
# devtools::install_github("SAlexHesp/L3AssessRPackage", build_vignettes=TRUE, force=TRUE)
rm(list=ls())
library(L3Assess)
citation("L3Assess")
# *********************************
# Length-based per recruit analysis
# *********************************
MaxModelAge <- 12 # maximum age considered by model, years
MaxObsAge <- 10.5
TimeStep <- 0.1 # Model time step (y) (for shorter-lived species, might be appropriate to use a smaller time step)
MaxLen = 400
LenInc = 5
lbnd = seq(0,MaxLen - LenInc, LenInc)
ubnd = lbnd + LenInc
midpt = lbnd + (LenInc/2)
nLenCl = length(midpt)
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf <- c(271.5, 236.7) # mm - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013, reg. comb.)
vbK <- c(0.57, 0.86) # year-1 - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013 reg. comb.)
tzero <- c(-0.3, -0.08) # years - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013 reg. comb.)
GrowthParams = data.frame(Linf=Linf, vbK=vbK, tzero=tzero)
RefnceAges = NA
# GrowthParams c(Linf, vbK, tzero) single sex von Bertalanffy, or data.frame(Linf=Linf, vbK=vbK, tzero=tzero),
#' both sexes von Bertalanffy, or c(y1, y2, a, b) single sex Schnute, or data.frame(y1=y1, y2=y2, a=a, b=b), both sexes Schnute
CVSizeAtAge = c(0.025,0.025)
WLrel_Type <- 1 # power
lenwt_a <- 0.0000164 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
lenwt_b <- 2.9013 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
test = lenwt_a * 221 ^ lenwt_b
ln_lenwt_a <- NA
EstWtAtLen <- data.frame(EstFemWtAtLen=NA,
EstMalWtAtLen=NA) # weight at age (from age 0), inputted as values in data frame
ReprodScale <- 1 # 1=default (standard calculations for spawning biomass), 2=hyperallometric reproductive scaling with female mass (i.e. BOFFF effects)
ReprodPattern <- 1 # 1 = gonochoristic (separate sexes), 2 = protogynous (female to male sex change), 3 = protandrous (male to female sex change)
InitRatioFem <- 0.5 # Ratio of females to males at age zero
FinalSex_Pmax <- NA # Logistic sex change relationship parameters (max probability of final sex)
FinalSex_L50 <- NA # Logistic sex change relationship parameters (inflection point)
FinalSex_L95 <- NA # Logistic sex change relationship parameters (95% of max probability)
mat_L50 <- c(194.1, 194.1) # females, males - Logistic length (mm) at maturity relationship parameters
mat_L95 <- c(250.8, 250.8) # females, males - Logistic length (mm) at maturity relationship parameters
EstMatAtLen <- data.frame(EstFemMatAtLen=NA,
EstMalMatAtLen=NA) # maturity at age (from age 0), inputted as values in data frame
ret_Pmax <- c(1.0, 1.0) # maximum retention, values lower than 1 imply discarding of fish above MLL
ret_L50 <- mat_L50 # females, males - approx - commercial on sc across several years - Ass WOE doc
ret_L95 <- mat_L95 # females, males - approx - commercial on sc across several years - Ass WOE doc
sel_L50 <- c(175,175) # females, males - Logistic age selectivity relationship parameters
sel_L95 <- c(200,200) # females, males - Logistic age selectivity relationship parameters
DiscMort <- 0.25 # discard mortality (e.g. 50% released fish die = 0.5)
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
Steepness = 0.75
# NatMort = 4.22 / MaxObsAge # Hewitt & Hoenig 2005
# NatMort=exp(1.551-1.066*log(MaxObsAge)) # Dureuil et al., 2021
# NatMort=5.44/(MaxObsAge) # Hamel & Cope, 2022
NatMort=-(log(0.015)/MaxObsAge) # Dureuil & Froese 2021
Current_F = 0.2
# *****************************************
# Plot 1: Show F vs catch length and weight
# *****************************************
Res=CalcYPRAndSPRForFMort_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, FMort=Current_F)
names(Res)
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
rm(list=ls())
library(L3Assess)
# Example 2: hermaphroditic species
InitRecruit <- 1 # Initial recruitment
MaxModelAge <- 100 # maximum age considered by model, years
TimeStep <- 1 # Model time step (y) (for shorter-lived species, might be approprriate to use a smaller time step)
Linf <- c(1000, 1000) # mm - von Bertalanffy growth model parameters - Females, males
vbK <- c(0.1, 0.1) # year-1 - von Bertalanffy growth model parameters - Females, males
tzero <- c(0, 0) # years - von Bertalanffy growth model parameters - Females, males
EstLenAtAge <- data.frame(EstMalLenAtAge=NA,
EstMalLenAtAge=NA) # length at age (from age 0), inputted as values in data frame
lenwt_a <- NA # combined sexes - weight (g) vs length (mm, TL) relationship parameters
ln_lenwt_a <- -11.0 # for log-log relationship
lenwt_b <- 3.0 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
WLrel_Type <- 2 # 1=power, 2=log-log relationship
EstWtAtAge <- data.frame(EstFemWtAtAge=NA,
EstMalWtAtAge=NA) # weight at age (from age 0), inputted as values in data frame
ReprodScale <- 1 # 1=default (standard calculations for spawning biomass), 2=hyperallometric reproductive scaling with female mass (i.e. BOFFF effects)
ReprodPattern <- 2 # 1 = gonochoristic (separate sexes), 2 = protogynous (female to male sex change), 3 = protandrous (male to female sex change)
InitRatioFem <- 1 # Ratio of females to males at age zero
FinalSex_Pmax <- 1 # Logistic sex change relationship parameters (max probability of final sex)
FinalSex_A50 <- 35 # Logistic sex change relationship parameters (inflection point)
FinalSex_A95 <- 60 # Logistic sex change relationship parameters (95% of max probability)
mat_A50 <- c(20, 20) # females, males - Logistic length (mm) at maturity relationship parameters
mat_A95 <- c(30, 30) # females, males - Logistic length (mm) at maturity relationship parameters
EstMatAtAge <- data.frame(EstFemMatAtAge=NA, EstMalMatAtAge=NA) # maturity at age (from age 0), inputted as values in data frame
sel_A50 <- c(15, 15) # females, males - Logistic age selectivity relationship parameters
sel_A95 <- c(25, 25) # females, males - Logistic age selectivity relationship parameters
EstSelAtAge <- data.frame(EstFemSelAtAge=NA, EstMalSelAtAge=NA) # gear selectivity at age (from age 0), inputted as values in data frame
ret_Pmax <- NA  # maximum retention, values lower than 1 imply discarding of fish above MLL
ret_A50 <- NA  # females, males - Logistic age fish retention at age parameters
ret_A95 <- NA  # females, males - Logistic age fish retention at age parameters
EstRetenAtAge <- data.frame(EstFemRetenAtAge=rep(1,MaxModelAge+1), EstMalRetenAtAge=rep(1,MaxModelAge+1)) # fish retention at age (from age 0), inputted as values in data frame
DiscMort <- 0.0 # discard mortality (e.g. 50% released fish die = 0.5)
Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
NatMort = 0.1 # natural mortality  (year-1)
Current_F <- 0.07 # estimate of fishing mortality, e.g. from catch curve analysis
RefPointPlotOpt <- 1 # 0=don't plot, 1=plot defaults, 2=plot BMSY ref points
PlotPerRecruitResults_AB(MaxModelAge, TimeStep, Linf, vbK, tzero, EstLenAtAge,
lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type, EstWtAtAge, ReprodScale,
ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_A50, FinalSex_A95,
mat_A50, mat_A95, EstMatAtAge, sel_A50, sel_A95, EstSelAtAge, ret_Pmax, ret_A50, ret_A95,
EstRetenAtAge, DiscMort, Steepness, SRrel_Type, NatMort, RefPointPlotOpt, Current_F)
RefPointPlotOpt <- 1 # 0=don't plot, 1=plot defaults, 2=plot BMSY ref points
PlotOpt <- 3
PlotPerRecruit_Biom_no_err_AB(MaxModelAge, TimeStep, Linf, vbK, tzero, EstLenAtAge,
lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type, EstWtAtAge, ReprodScale,
ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_A50, FinalSex_A95,
mat_A50, mat_A95, EstMatAtAge, sel_A50, sel_A95, EstSelAtAge, ret_Pmax, ret_A50, ret_A95,
EstRetenAtAge, DiscMort, Steepness, SRrel_Type, NatMort, PlotOpt, RefPointPlotOpt, Current_F)
Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
Steepness_sd <- 0.025
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
NatMort <- 0.2 # natural mortality  (year-1)
NatMort_sd <- 0.025
Current_F <- 0.1 # estimate of fishing mortality, e.g. from catch curve analysis
Current_F_sd <- 0.005
RefPointPlotOpt <- 1 # 0=don't plot, 1=plot defaults, 2=plot BMSY ref points
nReps = 50
FittedRes=GetPerRecruitResults_AB_with_err(MaxModelAge, TimeStep, Linf, vbK, tzero, EstLenAtAge,
lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type, EstWtAtAge, ReprodScale, ReprodPattern,
InitRatioFem, FinalSex_Pmax, FinalSex_A50, FinalSex_A95, mat_A50, mat_A95,
EstMatAtAge, sel_A50, sel_A95, EstSelAtAge, ret_Pmax, ret_A50, ret_A95,
EstRetenAtAge, DiscMort, Steepness, Steepness_sd, SRrel_Type, NatMort, NatMort_sd,
Current_F, Current_F_sd, nReps)
names(FittedRes)
FittedRes$EstFemSPR
FittedRes$EstLow95FemSPR
FittedRes$EstUp95FemSPR
FittedRes$EstEquilRelFemSpBiom
FittedRes$Low95EquilRelFemSpBiom
FittedRes$Upp95EquilRelFemSpBiom
FittedRes$EstMalSPR
PREst = GetPerRecruitResults_AB(MaxModelAge, TimeStep, Linf, vbK, tzero, EstLenAtAge,
lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type, EstWtAtAge, ReprodScale,
ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_A50, FinalSex_A95,
mat_A50, mat_A95, EstMatAtAge, sel_A50, sel_A95, EstSelAtAge,
ret_Pmax, ret_A50, ret_A95, EstRetenAtAge, DiscMort, Steepness,
SRrel_Type, NatMort, Current_F)
PREst$Mal_SPR
PREst$CombSex_SPR
