axis(2,at=seq(0,ymax,yint), cex.axis=0.8, lwd=1.75,lab=F) # y axis
axis(1,at=seq(0,MaxLen,xint), labels=seq(0,MaxLen,xint),cex.axis=0.8,line=0,las=1,lwd=1.5,tick=F) #add y labels
axis(2,at=seq(0,ymax,yint), cex.axis=0.8,line=0,las = 1,lwd=1.5,tick=F) #add y labels
mtext(expression(paste(plain("Mortality") ~ (year^{-1}))),las=3,side=2,line=2,cex=0.7,lwd=1.75)
mtext(expression(paste(plain("Length (mm"),plain(")"))),las=1,side=1,line=2,cex=0.7,lwd=1.75)
legend('topright', col=c("blue","brown","purple","black"),lty=c("solid","dotted","dotted","dashed"),
legend=c("Mal. F","Mal. DiscF","Mal.LandF","Mal. M"),bty='n', cex=1.0,lwd=1.75)
# plot fished and unfished female survival in terms of numbers given specified current fully-selected fishing mortality
plot(midpt, Res$Unfish_FemNPerRec,"l",frame.plot=F,ylim=c(0,InitRatioFem),xlim=c(0,MaxLen),col="red",yaxt="n",xaxt="n",
ylab="",xlab="")
lines(midpt, Res$Fish_FemNPerRec,col="red",lty="dotted")
axis(1,at=seq(0,MaxLen,xint), cex.axis=0.8, lwd=1.75,lab=F) # y axis
axis(2,at=seq(0,InitRatioFem,0.1), cex.axis=0.8, lwd=1.75,lab=F) # y axis
axis(1,at=seq(0,MaxLen,xint), labels=seq(0,MaxLen,xint),cex.axis=0.8,line=0,las=1,lwd=1.5,tick=F) #add y labels
axis(2,at=seq(0,InitRatioFem,0.1), cex.axis=0.8,line=0,las = 1,lwd=1.5,tick=F) #add y labels
mtext(expression(paste(plain("Rel. survival"))),las=3,side=2,line=2,cex=0.7,lwd=1.75)
mtext(expression(paste(plain("Length (mm"),plain(")"))),las=1,side=1,line=2,cex=0.7,lwd=1.75)
legend('topright', col="red",lty=c("solid","dotted"),
legend=c("Fem. unfish","Fem. fish"),bty='n', cex=1.0,lwd=1.75)
# plot fished and unfished male survival in terms of numbers given specified current fully-selected fishing mortality
plot(midpt, Res$Unfish_MalNPerRec,"l",frame.plot=F,ylim=c(0,InitRatioFem),xlim=c(0,MaxLen),col="blue",yaxt="n",xaxt="n",
ylab="",xlab="")
lines(midpt, Res$Fish_MalNPerRec,col="blue",lty="dotted")
axis(1,at=seq(0,MaxLen,xint), cex.axis=0.8, lwd=1.75,lab=F) # y axis
axis(2,at=seq(0,InitRatioFem,0.1), cex.axis=0.8, lwd=1.75,lab=F) # y axis
axis(1,at=seq(0,MaxLen,xint), labels=seq(0,MaxLen,xint),cex.axis=0.8,line=0,las=1,lwd=1.5,tick=F) #add y labels
axis(2,at=seq(0,InitRatioFem,0.1), cex.axis=0.8,line=0,las = 1,lwd=1.5,tick=F) #add y labels
mtext(expression(paste(plain("Rel. survival"))),las=3,side=2,line=2,cex=0.7,lwd=1.75)
mtext(expression(paste(plain("Length (mm"),plain(")"))),las=1,side=1,line=2,cex=0.7,lwd=1.75)
legend('topright', col="blue",lty=c("solid","dotted"),
legend=c("Mal. unfish","Mal. fish"),bty='n', cex=1.0,lwd=1.75)
# plot fished and unfished mature female biomass at age given specified current fully-selected fishing mortality
ylims = Get_yaxis_scale(Res$UnfishFemBiomAtAge)
ymax = ylims$ymax; yint = ylims$yint
plot(c(0,Ages), sum(Res$UnfishFemBiomAtAge[,1:nLenCl]),"l",frame.plot=F,ylim=c(0,ymax),xlim=c(0,MaxModelAge),
col="red",yaxt="n",xaxt="n",ylab="",xlab="")
sum(Res$UnfishFemBiomAtAge[,1:nLenCl])
library("Rcpp")
sourceCpp("L3Analyses_test.cpp")
library(L3Assess)
library(L3Assess)
# Simulate data
SampleSize=1000
set.seed(123)
MaxAge = 30
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1500
LenInc = 50
MLL = NA
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 300 # selectivity
L95 = 400 # selectivity
SelectivityVec = NA
DiscMort = 0
# # von Bertalanffy
# GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
# Linf = 800
# vbK = 0.2
# CVSizeAtAge = 0.08
# GrowthParams = c(Linf, vbK)
# RefnceAges = NA
# Schnute
GrowthCurveType = 2 # 1 = von Bertalanffy, 2 = Schnute
t1 = 1 # growth - Schnute
t2 = 10 # growth - Schnute
y1 = 400 # growth - Schnute
y2 = 1000 # growth - Schnute
a = 0.1 # growth - Schnute
b = 2.0 # growth - Schnute
CVSizeAtAge = 0.08
GrowthParams = c(y1, y2, a, b)
RefnceAges = c(t1,t2)
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = as.vector(Res$ObsCatchFreqAtLen)
MinFreq = 20 # set minimum frequency for larger lengths for analysis
# note, this needs to be high enough so that data for ln(n/dt) vs relative age for essentially straight
# line - if not, Z will be biased!!!
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
ModelType = 2 # 1 = von Bertalanffy growth curve (Pauly), 2 = length-converted catch curve - Schnute growth curve)
res=GetLenConvCatchCurveResults(ModelType, GrowthParams, RefnceAges, ObsCatchFreqAtLen,
MinFreq, lbnd, midpt, ubnd)
PlotLenConvCatchCurveResults(MaxAge, ModelType, GrowthParams, RefnceAges, ObsCatchFreqAtLen, MinFreq,
lbnd, midpt, ubnd)
plot(x,y)
x=1:5
y=1:5
plot(x,y)
dev.off()
x=1:5
y=1:5
plot(x,y)
# reset default par options
invisible(capture.output(par(.pardefault)))
.pardefault <- par() # store current par settings
# reset default par options
invisible(capture.output(par(.pardefault)))
# reset default par options
invisible(capture.output(suppressWarnings(par(.pardefault))))
# x = c(Ages[j],rev(Ages[j])) # using shading for 95% CLs
# y = c(Res$EstFreq_Zlow[1:length(jj)], rev(Res$EstFreq_Zup[1:length(j)]))
# polygon(x,y,col="pink",border=NA)
# lines(Ages[j], Res$EstFreq_Zup[1:length(j)] , col="black", lty="dotted")
# lines(Ages[jj], Res$EstFreq_Zlow[1:length(jj)] , col="black", lty="dotted")
sm1 = spline(Ages[j], Res$EstFreq_Zlow[1:length(jj)], n=100)
MainLabel=NA; xaxis_lab=NA; yaxis_lab=NA; xmax=NA; xint=NA;
ymax=0.10; yint=0.02; PlotCLs=TRUE; FittedRes; nReps=200
MainLabel=NA; xaxis_lab=NA; yaxis_lab=NA; xmax=NA; xint=NA;
ymax=0.10; yint=0.02; PlotCLs=TRUE; nReps=200
rm(list=ls())
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
#
# library(L3Assess)
#
library("Rcpp")
source("R_functions.R")
sourceCpp("L3Analyses2.cpp")
# # get data - 2 sexes
# ObsCatchFreqAtLen <- data.frame(matrix(nrow = 2, ncol = length(midpt))) # 2 sex
# colnames(ObsCatchFreqAtLen) <- midpt
# ObsCatchFreqAtLen[1,] = Res$ObsCatchFreqAtLen_Fem
# ObsCatchFreqAtLen[2,] = Res$ObsCatchFreqAtLen_Mal
# MinAge = floor(TimeStep)
# nAgeCl = length(MinAge:MaxAge)
# ObsCatchFreqAtLengthAndAge = array(c(unlist(Res$ObsCatchFreqAtLengthAndAge_Fem), unlist(Res$ObsCatchFreqAtLengthAndAge_Mal)),
#                                    c(nAgeCl, length(midpt), 2), dimnames=list(rownames(Res$ObsCatchFreqAtLengthAndAge_Fem),
#
# Simulate data
set.seed(123)
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 26
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1100
LenInc = 50
MLL = NA
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 400 # selectivity
L95 = 450 # selectivity
SelectivityVec = NA
DiscMort = 0
# # single sex, von Bertalanffy
# GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute (no yet implemented for this method)
# Linf = 800
# vbK = 0.2
# CVSizeAtAge = 0.08
# GrowthParams = c(Linf, vbK)
# RefnceAges = NA
# 2 sexes, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute (no yet implemented for this method)
Linf = c(700,850)
vbK = c(0.25,0.2)
CVSizeAtAge = c(0.05,0.05)
RefnceAges = NA
GrowthParams = data.frame(Linf=Linf, vbK=vbK)
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
lbnd=Res$lbnd
midpt=Res$midpt
ubnd=Res$ubnd
# # get data - 1 sex (or combined sexes)
# ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen # 1 sex
# ObsCatchFreqAtLengthAndAge = as.matrix(Res$ObsCatchFreqAtLengthAndAge) # 1 sex
# get data - 2 sexes
ObsCatchFreqAtLen <- data.frame(matrix(nrow = 2, ncol = length(midpt))) # 2 sex
colnames(ObsCatchFreqAtLen) <- midpt
ObsCatchFreqAtLen[1,] = Res$ObsCatchFreqAtLen_Fem
ObsCatchFreqAtLen[2,] = Res$ObsCatchFreqAtLen_Mal
ObsCatchFreqAtLengthAndAge = array(c(unlist(Res$ObsCatchFreqAtLengthAndAge_Fem), unlist(Res$ObsCatchFreqAtLengthAndAge_Mal)),
c(MaxAge, length(midpt), 2), dimnames=list(rownames(Res$ObsCatchFreqAtLengthAndAge_Fem),
colnames(Res$ObsCatchFreqAtLengthAndAge_Fem)))
# # get params - 1 sex
# InitFishMort = 0.3 # specify starting parameters
# InitL50 = 300
# InitL95 = 500
# InitLinf = 800
# InitvbK = 0.2
# InitCVSizeAtAge = 0.05
# get params - 2 sexes
InitFishMort = 0.3 # specify starting parameters
InitL50 = 300
InitL95 = 500
InitLinf = c(800,800)
InitvbK = c(0.25,0.25)
InitCVSizeAtAge = 0.05
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform (so F is always between 0 and 1)
params = c(InitFishMort_logit, log(c(InitL50, InitL95, InitLinf, InitvbK, InitCVSizeAtAge)))
FittedRes=GetAgeAndLengthBasedCatchCurveResults(params, MLL, SelectivityType, ObsCatchFreqAtLen, ObsCatchFreqAtLengthAndAge,
lbnd, ubnd, midpt, SelectivityVec, DiscMort, MaxAge, NatMort, TimeStep)
library(L3Assess)
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1500
LenInc = 20
MLL = NA
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 600 # selectivity
L95 = 700 # selectivity
SelectivityVec = NA
PropReleased = NA # vector including mean and sd
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK, CVSizeAtAge)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 600
InitL95 = 700
params = c(InitFishMort_logit, log(InitL50), log(InitL95))
Res=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
SelectivityVec
params = c(InitFishMort_logit)
Res=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
InitL50 = NA
InitL95 = NA
params = c(InitFishMort_logit, log(InitL50), log(InitL95))
Res=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
SelectivityVec
SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
params = c(InitFishMort_logit)
Res=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
library(L3Assess)
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1500
LenInc = 20
MLL = NA
SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
# L50 = 600 # selectivity
# L95 = 700 # selectivity
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
PropReleased = NA # vector including mean and sd
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK, CVSizeAtAge)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
library(L3Assess)
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1500
LenInc = 20
MLL = NA
SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
# L50 = 600 # selectivity
# L95 = 700 # selectivity
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
PropReleased = NA # vector including mean and sd
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK, CVSizeAtAge)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
params = c(InitFishMort_logit)
Res=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
Res$ParamEst
library(L3Assess)
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1500
LenInc = 20
MLL = NA
SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
# L50 = 600 # selectivity
# L95 = 700 # selectivity
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
PropReleased = NA # vector including mean and sd
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK, CVSizeAtAge)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
SelectivityVec = 1 / (1 + exp(-log(19)*(midpt-L50)/(L95-L50)))
params = c(InitFishMort_logit)
FittedRes=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
# Plot. Note, can skip above step and set FittedRes=NA (plot function will be slower)
PlotLengthBasedCatchCurveResults(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt,
SelectivityVec, PropReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, MaxAge, NatMort, TimeStep, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=1500, xint=500,
ymax=0.15, yint=0.05, PlotCLs=TRUE, FittedRes, nReps=200)
library(L3Assess)
library(L3Assess)
set.seed(123)
MinAge = 1
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required number of fish for age sample
Res=SimAgeFreqData(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample))
Init_FMort = 0.2
Init_SelA50 = 5
Init_SelA95 = 7
ln_params = log(c(Init_FMort, Init_SelA50, Init_SelA95))
res=GetLogisticCatchCurveResults(ln_params, NatMort, Ages, ObsAgeFreq)
res
res$ParamEst
res$ParamEst[1,1]
# Alex Hesp, 3/4/2023
# for Brett.
# Using both prop released and mean length of released fish data, to fit length-based catch curve.
rm(list=ls())
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# library(devtools)
# devtools::install_github("SAlexHesp/L3AssessRPackage", build_vignettes=TRUE, force=TRUE)
library(L3Assess)
# ************************
# Simulate single sex data
# ************************
# Simulate data
SampleSize=5000
set.seed(123)
MaxAge = 40
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.15
MaxLen = 1500
LenInc = 50
MLL = 500
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 300 # selectivity
L95 = 350 # selectivity
SelectivityVec = NA
DiscMort = 0.25
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 1150
vbK = 0.12
CVSizeAtAge = 0.05
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
plot(Res$midpt, Res$DiscCatchAtLen, "o")
Res$PropReleased
PropReleased = sum(Res$DiscCatchAtLen) / sum(Res$TotCatchAtLen)
PropReleased_sd = sqrt(PropReleased * (1 - PropReleased))/SampleSize
# approximation of sd, based on se of sample proportion
MeanLenReleased = sum((Res$DiscCatchAtLen * Res$midpt)) / sum(Res$DiscCatchAtLen)
MeanLenReleased_sd = sqrt((sum(Res$DiscCatchAtLen * (Res$midpt^2)) / sum(Res$DiscCatchAtLen)) - MeanLenReleased^2)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
length(midpt)
PropReleased = c(PropReleased,PropReleased_sd) # NA # vector including mean and sd
MeanLenReleased = c(MeanLenReleased,MeanLenReleased_sd) # vector including mean and sd (note, this is sd for size distribution, not sd for estimate of mean)
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 350
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, MeanLenReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes$ParamEst
FittedRes$nll
FittedRes$EstPropReleased
FittedRes$ExpMeanLenReleased
par(mfrow=c(1,1))
PlotLengthBasedCatchCurve_RetCatch(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt,
SelectivityVec, PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, MaxAge, NatMort, TimeStep, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=1500, xint=500,
ymax=0.5, yint=0.05, PlotCLs=TRUE, FittedRes, nReps=200)
PlotLengthBasedCatchCurve_Selectivity(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt, SelectivityVec,
PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges,
MaxAge, NatMort, TimeStep, MainLabel=NA, xaxis_lab=NA, yaxis_lab=NA, xmax=1200, xint=200,
ymax=1.0, yint=0.2, PlotCLs=TRUE, FittedRes, nReps=200)
PlotLengthBasedCatchCurve_Mortality(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt, SelectivityVec,
PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges,
MaxAge, NatMort, TimeStep, xmax=NA, xint=NA, ymax=NA, yint=NA, FittedRes)
dat = read.csv("Snapper_Western Australia_Charter_2019.csv",header=T)
ObsCatchFreqAtLen = dat$freq
midpt = dat$midpt
MaxAge = 40
# Simulate data
SampleSize=1000
set.seed(123)
MaxAge = 40
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.15
MaxLen = 1500
LenInc = 50
MLL = 500
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
L50 = 300 # selectivity
L95 = 350 # selectivity
SelectivityVec = NA
DiscMort = 0.25
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 1150
vbK = 0.12
CVSizeAtAge = 0.05
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
L50, L95, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsCatchFreqAtLen = Res$ObsCatchFreqAtLen
plot(Res$midpt, Res$DiscCatchAtLen, "o")
Res$PropReleased
PropReleased = sum(Res$DiscCatchAtLen) / sum(Res$TotCatchAtLen)
PropReleased_sd = sqrt(PropReleased * (1 - PropReleased))/SampleSize
# approximation of sd, based on se of sample proportion
MeanLenReleased = sum((Res$DiscCatchAtLen * Res$midpt)) / sum(Res$DiscCatchAtLen)
MeanLenReleased_sd = sqrt((sum(Res$DiscCatchAtLen * (Res$midpt^2)) / sum(Res$DiscCatchAtLen)) - MeanLenReleased^2)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
length(midpt)
PropReleased = c(PropReleased,PropReleased_sd) # NA # vector including mean and sd
MeanLenReleased = c(MeanLenReleased,MeanLenReleased_sd) # vector including mean and sd (note, this is sd for size distribution, not sd for estimate of mean)
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 350
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes=GetLengthBasedCatchCurveResults(params, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsCatchFreqAtLen,
lbnd, ubnd, midpt, SelectivityVec, PropReleased, MeanLenReleased, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
FittedRes$ParamEst
FittedRes$nll
FittedRes$EstPropReleased
FittedRes$ExpMeanLenReleased
par(mfrow=c(1,1))
PlotLengthBasedCatchCurve_RetCatch(params, MLL, SelectivityType, ObsCatchFreqAtLen, lbnd, ubnd, midpt,
SelectivityVec, PropReleased, MeanLenReleased, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, MaxAge, NatMort, TimeStep, MainLabel=NA,
xaxis_lab=NA, yaxis_lab=NA, xmax=1500, xint=500,
ymax=0.5, yint=0.05, PlotCLs=TRUE, FittedRes, nReps=200)
