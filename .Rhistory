library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# Preliminary analysis, exploring impacts of different catch levels on
# stock abundance, and sizes of fish in catches
# Alex Hesp
# 22/5/2023
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# library(devtools)
# devtools::install_github("SAlexHesp/L3AssessRPackage", build_vignettes=TRUE, force=TRUE)
rm(list=ls())
library(L3Assess)
citation("L3Assess")
# *********************************
# Length-based per recruit analysis
# *********************************
MaxModelAge <- 15 # maximum age considered by model, years
MaxObsAge <- 10.5
TimeStep <- 0.1 # Model time step (y) (for shorter-lived species, might be appropriate to use a smaller time step)
MaxLen = 400
LenInc = 10
lbnd = seq(0,MaxLen - LenInc, LenInc)
ubnd = lbnd + LenInc
midpt = lbnd + (LenInc/2)
nLenCl = length(midpt)
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf <- c(271.5, 236.7) # mm - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013, reg. comb.)
vbK <- c(0.57, 0.86) # year-1 - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013 reg. comb.)
tzero <- c(-0.3, -0.08) # years - von Bertalanffy growth model parameters - Females, males (Smith et al., 2013 reg. comb.)
GrowthParams = data.frame(Linf=Linf, vbK=vbK, tzero=tzero)
RefnceAges = NA
# GrowthParams c(Linf, vbK, tzero) single sex von Bertalanffy, or data.frame(Linf=Linf, vbK=vbK, tzero=tzero),
#' both sexes von Bertalanffy, or c(y1, y2, a, b) single sex Schnute, or data.frame(y1=y1, y2=y2, a=a, b=b), both sexes Schnute
CVSizeAtAge = c(0.025,0.025)
WLrel_Type <- 1 # power
lenwt_a <- 0.0000164 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
lenwt_b <- 2.9013 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
test = lenwt_a * 221 ^ lenwt_b
ln_lenwt_a <- NA
EstWtAtLen <- data.frame(EstFemWtAtLen=NA,
EstMalWtAtLen=NA) # weight at age (from age 0), inputted as values in data frame
ReprodScale <- 1 # 1=default (standard calculations for spawning biomass), 2=hyperallometric reproductive scaling with female mass (i.e. BOFFF effects)
ReprodPattern <- 1 # 1 = gonochoristic (separate sexes), 2 = protogynous (female to male sex change), 3 = protandrous (male to female sex change)
InitRatioFem <- 0.5 # Ratio of females to males at age zero
FinalSex_Pmax <- NA # Logistic sex change relationship parameters (max probability of final sex)
FinalSex_L50 <- NA # Logistic sex change relationship parameters (inflection point)
FinalSex_L95 <- NA # Logistic sex change relationship parameters (95% of max probability)
mat_L50 <- c(194.1, 194.1) # females, males - Logistic length (mm) at maturity relationship parameters
mat_L95 <- c(250.8, 250.8) # females, males - Logistic length (mm) at maturity relationship parameters
EstMatAtLen <- data.frame(EstFemMatAtLen=NA,
EstMalMatAtLen=NA) # maturity at age (from age 0), inputted as values in data frame
ret_Pmax <- c(1.0, 1.0) # maximum retention, values lower than 1 imply discarding of fish above MLL
ret_L50 <- mat_L50 # females, males - approx - commercial on sc across several years - Ass WOE doc
ret_L95 <- mat_L95 # females, males - approx - commercial on sc across several years - Ass WOE doc
sel_L50 <- c(175,175) # females, males - Logistic age selectivity relationship parameters
sel_L95 <- c(200,200) # females, males - Logistic age selectivity relationship parameters
DiscMort <- 0.25 # discard mortality (e.g. 50% released fish die = 0.5)
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
# # specify some conservative values for M and h, to allow for uncertainty in these variables
# Mean_Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
# Steepness_sd <- 0.025
# Mean_NatMort <- 4.22 / 10.5 # natural mortality  (year-1). 10.5 y assumed as maximum age in last assessment.
# NatMort_sd <- 0.025
# rand_h = rnorm(1000,Mean_Steepness,Steepness_sd)
# rand_M = rnorm(1000,Mean_NatMort,NatMort_sd)
Steepness = 0.75
# NatMort = 4.22 / MaxObsAge # Hewitt & Hoenig 2005
# NatMort=exp(1.551-1.066*log(MaxObsAge)) # Dureuil et al., 2021
# NatMort=5.44/(MaxObsAge) # Hamel & Cope, 2022
NatMort=-(log(0.015)/MaxObsAge) # Dureuil & Froese 2021
FMort = 0.6
# run standard length-based per recruit anlaysis to get SPR and Brel, for a specified F
Res=CalcYPRAndSPRForFMort_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, FMort)
# now get results over a range of F values
Res=GetPerRecruitResults_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, FMort)
Rel_MSY=max(Res$EquilCatchResults)
Res$Fem_SPR
Res$Equilmod_FemRelBiom
BMSY = Res$BMSY_Thresh # BMSY
Res$BMSY_Targ # 1.2BMSY
Res$BMSY_Lim # 0.5BMSY
F_MSY = Res$F_MSY
EquilCatchResults=Res$EquilCatchResults
# specify a more conservative target than default 1.2BMSY in L3Assess package, to ensure
# healthy level of biomass, also likely to lead to catches with larger fish
BMSY_targ2 = 0.6
# get equilibrium catch at F_targ
x=min(which(Res$Equilmod_FemRelBiomResults<=0.6))
F_targ=Res$FishMort[x]
FMort = F_targ
FishMort = Res$FishMort
Catches = EquilCatchResults * (1199.47/Rel_MSY)
# ***********************************
# Plot 1: Show growth and selectivity
# ***********************************
# inspect per recruit diagnostics
Current_F = F_targ
PlotPerRecruitResults_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, Current_F)
# ***********************************
# Plot 2: Show F vs relative biomass
# ***********************************
par(mfrow=c(1,1),mar=c(5,4,2,2))
RefPointPlotOpt <- 2 # 0=don't plot, 1=plot defaults, 2=plot BMSY ref points
PlotPerRecruit_Biom_no_err_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type,
EstWtAtLen, ReprodScale, ReprodPattern, InitRatioFem, FinalSex_Pmax, FinalSex_L50,
FinalSex_L95, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, ret_Pmax,
ret_L50, ret_L95, DiscMort, Steepness, SRrel_Type, NatMort, RefPointPlotOpt, Current_F)
# ***********************************
# Plot 3: Show F vs biomass and size
# ***********************************
# get relationship between fishing mortality and mean length of females in catches
par(mfrow=c(2,3),mar=c(5,4,2,2))
plot(FishMort, Res$MeanCatchLenResults[,2], "l", ylim=c(0,400), ylab = "Fem. length, mm", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchLenResults.lw95pi[,2],rev(Res$MeanCatchLenResults.up95pi[,2]))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchLenResults.lw60pi[,2],rev(Res$MeanCatchLenResults.up60pi[,2]))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchLenResults[,2],col="red")
x = max(which(Res$Equilmod_FemRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchLenResults[x,2], pch=16, cex=2, col="red")
abline(h=200,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","red"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
# males
plot(FishMort, Res$MeanCatchLenResults[,3], "l", ylim=c(0,400), ylab = "Mal. length, mm", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchLenResults.lw95pi[,3],rev(Res$MeanCatchLenResults.up95pi[,3]))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchLenResults.lw60pi[,3],rev(Res$MeanCatchLenResults.up60pi[,3]))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchLenResults[,3],col="blue")
x = max(which(Res$Equilmod_MalRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchLenResults[x,3], pch=16, cex=2, col="blue")
abline(h=200,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","blue"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
# combined sex
plot(FishMort, Res$MeanCatchLenResults[,4], "l", ylim=c(0,400), ylab = "Comb. sex length, mm", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchLenResults.lw95pi[,4],rev(Res$MeanCatchLenResults.up95pi[,4]))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchLenResults.lw60pi[,4],rev(Res$MeanCatchLenResults.up60pi[,4]))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchLenResults[,3],col="orange")
x = max(which(Res$Equilmod_MalRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchLenResults[x,3], pch=16, cex=2, col="orange")
abline(h=200,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","orange"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
# get relationship between fishing mortality and mean weight of females in catches
plot(FishMort, Res$MeanCatchWtResults[,2]*1000, "l", ylim=c(0,300), ylab = "Fem. weight, g", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchWtResults.lw95pi[,2]*1000,rev(Res$MeanCatchWtResults.up95pi[,2]*1000))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchWtResults.lw60pi[,2]*1000,rev(Res$MeanCatchWtResults.up60pi[,2]*1000))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchWtResults[,2]*1000,col="red")
x = max(which(Res$Equilmod_FemRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchWtResults[x,2]*1000, pch=16, cex=2, col="red")
abline(h=100,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","red"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
# males
plot(FishMort, Res$MeanCatchWtResults[,3]*1000, "l", ylim=c(0,300), ylab = "Mal. weight, g", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchWtResults.lw95pi[,3]*1000,rev(Res$MeanCatchWtResults.up95pi[,3]*1000))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchWtResults.lw60pi[,3]*1000,rev(Res$MeanCatchWtResults.up60pi[,3]*1000))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchWtResults[,3]*1000,col="blue")
x = max(which(Res$Equilmod_MalRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchWtResults[x,3]*1000, pch=16, cex=2, col="blue")
abline(h=100,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","blue"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
# combined sex
plot(FishMort, Res$MeanCatchWtResults[,4]*1000, "l", ylim=c(0,300), ylab = "Comb. sex weight, g", xlab = "Fishing mortality", col="red", bty='n')
x = c(FishMort,rev(FishMort))
y = c(Res$MeanCatchWtResults.lw95pi[,4]*1000,rev(Res$MeanCatchWtResults.up95pi[,4]*1000))
polygon(x,y, col="pink",border=NA)
y = c(Res$MeanCatchWtResults.lw60pi[,4]*1000,rev(Res$MeanCatchWtResults.up60pi[,4]*1000))
polygon(x,y, col="light blue",border=NA)
lines(FishMort, Res$MeanCatchWtResults[,3]*1000,col="orange")
x = max(which(Res$Equilmod_MalRelBiomResults>BMSY_targ2))
points(F_targ, Res$MeanCatchWtResults[x,3]*1000, pch=16, cex=2, col="orange")
abline(h=100,lwd=2, lty="dotted")
legend('topright', bty='n', cex=0.8, lwd=c(5,5,-1), pch = c(NA,NA,16), col=c("light blue","pink","orange"),
legend=c("60% Pred. Int.","95% Pred. Int.","Target F"))
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
#' Get maximum and minimum x values and x interval
#'
#' Used for setting plot defaults
#'
#' @keywords internal
#'
#' @param x_data x axis data for plot
#'
#' @return list object with minimum and maximum x axis values and x axis interval
Get_xaxis_scale <- function(x_data) {
# modified from code provided by
# https://peltiertech.com/calculate-nice-axis-scales-in-excel-vba/
xmax_data = max(x_data)
xmin_data = min(x_data)
xpow = log10(xmax_data-xmin_data)
xint = 10 ^ (xpow-round(xpow,0))
if (xint>=0 & xint<2.5) {
xint = 0.2
}
if (xint>=2.5 & xint<5) {
xint = 0.5
}
if (xint>=5 & xint<7.5) {
xint = 1
}
if (xint>=7.5) {
xint = 2
}
xint = xint * 10^round(xpow,0) # major ticks
xmin = xint * round(xmin_data/xint,0)
xmax = xint * (round(xmax_data / xint,0) + 1)
results = list(xmin = xmin,
xmax = xmax,
xint = xint)
}
#' Get maximum and minimum y values and y interval
#'
#' Used for setting plot defaults
#'
#' @keywords internal
#'
#' @param y_data y axis data for plot
#'
#' @return list object with minimum and maximum y axis values and y axis interval
Get_yaxis_scale <- function(y_data) {
# modified from code provided by
# https://peltiertech.com/calculate-nice-axis-scales-in-excel-vba/
ymax_data = max(1.1 * y_data)
ymin_data = min(y_data)
ypow = log10(ymax_data-ymin_data)
yint = 10 ^ (ypow-round(ypow,0))
if (yint>=0 & yint<2.5) {
yint = 0.2
}
if (yint>=2.5 & yint<5) {
yint = 0.5
}
if (yint>=5 & yint<7.5) {
yint = 1
}
if (yint>=7.5) {
yint = 2
}
yint = yint * 10^round(ypow,0) # major ticks
ymin = yint * round(ymin_data/yint,0)
ymax = yint * (round(ymax_data / yint,0) + 1)
results = list(ymin = ymin,
ymax = ymax,
yint = yint)
}
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
# install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
# install.packages("C:/~/WAFishBiology_0.1.0.tar.gz", source = TRUE, repos=NULL)
rm(list=ls())
# library(WAFishBiology)
library(L3Assess)
# Simulate data
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityVec = NA # selectivity vector
SelParams = c(200, 50) # L50, L95-L50 for gear selectivity
RetenParams = NA # c(400, 50) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
SelParams, RetenParams, SelectivityVec, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsRetCatchFreqAtLen = Res$ObsRetCatchFreqAtLen
ObsDiscCatchFreqAtLen = Res$ObsDiscCatchFreqAtLen # NA # (or set to Res$ObsRetCatchFreqAtLen)
ObsDiscCatchFreqAtLen
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
library(L3Assess)
install.packages("C:/~/L3Assess_0.1.0.tar.gz", source = TRUE, repos=NULL)
