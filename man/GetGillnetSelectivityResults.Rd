% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/L3Analyses.R
\name{GetGillnetSelectivityResults}
\alias{GetGillnetSelectivityResults}
\title{Fit Kirkwood & Walker (1986) gillnet selectivity model and get results}
\usage{
GetGillnetSelectivityResults(
  params,
  MeshSize_mm,
  nMeshes,
  midpt,
  ObsCatchLenFreqByMesh
)
}
\arguments{
\item{params}{theta and theta2 parameters of Kirkwood and Walker (1986) model}

\item{MeshSize_mm}{vector of gillnet mesh sizes, in mm}

\item{nMeshes}{number of gillnet meshes}

\item{midpt}{mid points of length classes}

\item{ObsCatchLenFreqByMesh}{observed length frequency data (by mesh)}

\item{nLenCl}{number of length classes}
}
\value{
ParamEst, params, NLL, convergence, vcov.Params, ses, cor.Params, RelNum_popn,
SelAtLengthForMesh, SelAtLength, EstCatchNum_ij, alpha_beta, alpha, beta
}
\description{
Fit Kirkwood & Walker (1986) model to get estimates of gillnet selectivity at length,
by mesh and overall (assuming equal fishing power of meshes), given input model parameter
values (theta1 and theta2). Routine also provides various statistical outputs including
convergence statistics, parameter estimates and associated 95 percent confidence limits
and associated variance-covariance matrix, calculated using the MASS package.
}
\examples{
# Simulate fish length data for gillnet catches
MaxModelAge <- 20 # maximum age considered by model, years
TimeStep <- 1/4 # Model time step (y) (for shorter-lived species, might be appropriate to use a smaller time step)
MaxLen = 600
LenInc = 20
lbnd = seq(0,MaxLen - LenInc, LenInc)
ubnd = lbnd + LenInc
midpt = lbnd + (LenInc/2)
nLenCl = length(midpt)
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf <- c(400, 400) # mm - von Bertalanffy growth model parameters - Females, males
vbK <- c(0.3, 0.3) # year-1 - von Bertalanffy growth model parameters - Females, males
tzero <- c(0, 0) # years - von Bertalanffy growth model parameters - Females, males
GrowthParams = data.frame(Linf=Linf, vbK=vbK, tzero=tzero)
RefnceAges = NA
CVSizeAtAge = c(0.03,0.03)
lenwt_a <- 0.000005 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
ln_lenwt_a <- NA # for log-log relationship
lenwt_b <- 3 # combined sexes - weight (g) vs length (mm, TL) relationship parameters
WLrel_Type <- 1 # 1=power, 2=log-log relationship
EstWtAtLen <- data.frame(EstFemWtAtLen=NA,
                         EstMalWtAtLen=NA) # weight at age, inputted as values in data frame
ReprodScale <- 1 # 1=default (standard calculations for spawning biomass), 2=hyperallometric reproductive scaling with female mass (i.e. BOFFF effects)
ReprodPattern <- 1 # 1 = gonochoristic (separate sexes), 2 = protogynous (female to male sex change), 3 = protandrous (male to female sex change)
InitRatioFem <- 0.5 # Ratio of females to males at recruitment age/length
FinalSex_L50 <- NA # Logistic sex change relationship parameters (inflection point)
FinalSex_L95 <- NA # Logistic sex change relationship parameters (95\% of max probability)
EstSexRatioAtLen <- NA  # sex ratio at length inputted as vector
EggFertParam <- NA # (NA or from ~0.2-1) NA = no effect, ~0.2 = direct effect of popn. sex ratio changes on egg fertilisation rates, 1 = no effects
mat_L50 <- c(180, 180) # females, males - Logistic length (mm) at maturity relationship parameters
mat_L95 <- c(200, 200) # females, males - Logistic length (mm) at maturity relationship parameters
EstMatAtLen <- data.frame(EstFemMatAtLen=NA,
                          EstMalMatAtLen=NA) # maturity at length, inputted as values in data frame
sel_L50 <- c(180, 180) # females, males - Logistic length selectivity relationship parameters
sel_L95 <- c(200, 200) # females, males - Logistic length selectivity relationship parameters
EstGearSelAtLen <- data.frame(EstFemGearSelAtLen=NA,
                              EstMalGearSelAtLen=NA)
ret_Pmax <- c(1.0, 1.0) # maximum retention, values lower than 1 imply discarding of fish above MLL
ret_L50 <- c(240, 240) # females, males - Logistic fish retention at length parameters
ret_L95 <- c(250, 250) # females, males - Logistic fish retention at length parameters
EstRetenAtLen <- data.frame(EstFemRetenAtLen=NA,
                            EstMalRetenAtLen=NA)
DiscMort <- 0 # discard mortality (e.g. 50\% released fish die = 0.5)
Steepness <- 0.75 # steepness parameter of the Beverton and Holt stock-recruitment relationship
SRrel_Type <- 1 # 1 = Beverton-Holt, 2=Ricker
NatMort = 4.22 / MaxModelAge # natural mortality  (year-1)
FMort = 2 * NatMort
Res=CalcYPRAndSPRForFMort_LB(MaxModelAge, TimeStep, lbnd, ubnd, midpt, nLenCl, GrowthCurveType, GrowthParams,
                             RefnceAges, CVSizeAtAge, lenwt_a, ln_lenwt_a, lenwt_b, WLrel_Type, EstWtAtLen,
                             ReprodScale, ReprodPattern, InitRatioFem, FinalSex_L50, FinalSex_L95, EstSexRatioAtLen,
                             EggFertParam, mat_L50, mat_L95, EstMatAtLen, sel_L50, sel_L95, EstGearSelAtLen, ret_Pmax,
                             ret_L50, ret_L95, EstRetenAtLen, DiscMort, Steepness, SRrel_Type, NatMort, FMort)
# get proportions of fish at length in population
N = Res$ModelDiag$Fish_FemNPerRecLen + Res$ModelDiag$Fish_MalNPerRecLen
mu = N / sum(N)
# draw random sample of fish lengths from the population
nSamples = 5000
RandFishLenFreq = as.vector(rmultinom(1, nSamples, mu))
RandFishLen = rep(midpt,RandFishLenFreq)
# Get length-based selectivity by mesh and overall using Kirkwood & Walker (1986) method
MeshSize_mm = c(38, 51, 63, 76, 89, 102, 115, 102)
nMeshes = length(MeshSize_mm)
theta1 = 3
theta2 = 2000
Res=CalcGillnetSelectivity(theta1, theta2, MeshSize_mm, nMeshes, nLenCl, midpt)
SelAtLengthForMesh=Res$SelAtLengthForMesh
SelAtLength=Res$SelAtLength
# for (i in 1:nMeshes) {
#   if (i==1) plot(midpt,Res$SelAtLengthForMesh[i,], "l", ylab="Selectivity")
#   if (i>1) lines(midpt,Res$SelAtLengthForMesh[i,])
# }
# lines(midpt,Res$SelAtLength,"l",col="blue")
# Get a random sample of fish lengths from gillnet catches
ObsCatchLenFreqByMesh = data.frame(matrix(nrow=nMeshes,ncol=length(midpt)))
colnames(ObsCatchLenFreqByMesh) = midpt
ObsCatchLenFreqByMesh[1:nMeshes,1:length(midpt)] = 0
set.seed(123)
for (k in 1:nSamples) {
  FishLen = RandFishLen[k]
  FishLenCl = trunc(FishLen/LenInc) + 1 # get fish length class
  FishLenClMidpt = midpt[FishLenCl] # get length class midpt
  RandMesh = sample(1:nMeshes,1) # select random gillnet mesh (assume fish have equal change of encontering any mesh)
  ProbCapt = SelAtLengthForMesh[RandMesh,FishLenCl] # get selectivity for that fish
  RandNum = runif(1,0,1) # random number between 0 and 1
  if (RandNum < ProbCapt) { # accept fish as being caught by mesh if RandNum < ProbCapt
    ObsCatchLenFreqByMesh[RandMesh,FishLenCl] = ObsCatchLenFreqByMesh[RandMesh,FishLenCl] + 1
  }
}
CatchSampLenFreq = rep(0,length(midpt)) # plot overall length frequency
for (i in 1:nMeshes) { CatchSampLenFreq = CatchSampLenFreq + ObsCatchLenFreqByMesh[i,] }
# par(mfcol=c(1,1)) # plot random catch data by mesh
# for (i in 1:nMeshes) {
#   if (i==1) plot(midpt,ObsCatchLenFreqByMesh[i,],"l", ylim=c(0,max(ObsCatchLenFreqByMesh[,])))
#   if (i>1) lines(midpt,ObsCatchLenFreqByMesh[i,], col=i)
# }
# plot(midpt,CatchSampLenFreq,"l")
# fit K & W method to data to see if params can be recovered
theta1 = 5
theta2 = 1500
params = log(c(theta1, theta2))
res=GetGillnetSelectivityResults(params, MeshSize_mm, nMeshes, midpt, ObsCatchLenFreqByMesh)
# estimates of selectivity (by mesh and overall)
# par(mfrow=c(1,1))
# for (i in 1:nMeshes) {
#   if (i==1) {
#     plot(midpt,res$SelAtLengthForMesh[i,],"l")
#   } else {
#     lines(midpt,res$SelAtLengthForMesh[i,])
#   }
# }
# lines(midpt, res$SelAtLength, col="blue")
# # observed vs expected catches by mesh
# par(mfcol=c(3,2))
# for (i in 1:nMeshes) {
#   plottitle = paste0("mesh=",i," n=",sum(ObsCatchLenFreqByMesh[i,]))
#   plot(midpt, ObsCatchLenFreqByMesh[i,],"l", main=plottitle)
#   lines(midpt, res$EstCatchNum_ij[i,], col="blue")
# }
}
