% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/L3Analyses.R
\name{GetLogisticCatchCurveResults}
\alias{GetLogisticCatchCurveResults}
\title{Get statistical outputs from a fitted catch curve with age-based, logistic selectivity}
\usage{
GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
}
\arguments{
\item{params}{model parameters log(c(FMort, SelA50, SelDelta) for multinomial NLL or
log(c(FMort, SelA50, SelDelta, theta) for Dirichlet multinomial NLL}

\item{NatMort}{natural mortality}

\item{Ages}{ages in observed data}

\item{ObsAgeFreq}{observed age frequency data}
}
\value{
negative log-likelihood (nll), nlminb convergence diagnostic (convergence)
sample size (SampleSize), parameter estimates with lower and upper 95 percent
confidence limits (ParamEst), estimated fishing mortality and standard error (EstFMort, EstFMort_se)
variance-covariance matrix for estimated parameters (vcov.Params), parameter correlation matrix (cor.Params),
standard errors for estimated parameters (lnEstFMort_se, lnEstSelA50_se, lnEstFSelA95_se), selectivity at age (SelAtAge), fishing
mortality at age (FAtAge), sex-specific estimated frequencies at age with associated 95 percent confidence limits
(EstFreq, EstFreq_Zlow, EstFreq_Zup, EstFreq_2, EstFreq_Zlow_2, EstFreq_Zup_2), median and lower 2.5 and upper
97.5 percentiles of estimates for sex-specific frequency at age (EstFreq.sim_1, EstFreq.sim_2), selectivity parameters in normal
space, if combined sex model (SelA50.sim, SelA95.sim), fishing mortality (FMort.sim) and total mortality (EstZMort.sim), estimated parameters from saved par
object (Estparams), Dirichlet multinomial effective sample size estimate (EffSampSize), if using this
objective function
}
\description{
This function fits a catch curve with an asymptotic, age-based logistic selectivity curve,
to a sample of fish age frequency data, by minimising either a multinomial or Dirichlet
multinomial the negative log-likelihood associated with the parameters and data, using nlminb.
It provides various statistical outputs including convergence statistics, parameter estimates
and associated 95 percent confidence limits and associated variance-covariance matrix, calculated
using the MASS package
}
\examples{
# Simulate data from Multinomial distribution (single sex)
set.seed(123)
MinAge = 1
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = 6
SelA95 = 8
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = unlist(as.vector(Res$CatchSample)) # input as vector for single sex model
# Specify catch curve model and required inputs for that model
NatMort = 0.104 # Logistic selectivity
MinFreq = NA # # Logistic selectivity
Init_FMort = 0.2
Init_SelA50 = 5
Init_SelDelta = 2
params = log(c(Init_FMort, Init_SelA50, Init_SelDelta))
res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
res$ParamEst
library(dirmult)
# Simulate data from Dirichlet multinomial distribution (single sex)
# J = number of fish sampling events
# K = number of age classes
# n = number of fish sampled from each sampling event
# pi = expected proportion at age
# theta = amount of autocorrelation between ages of fish within sampling events
# Fit catch curve with Dirichlet multinomial distribution objective function (single sex)
set.seed(123)
theta_val = 0.3
simDat = simPop(J=50, K=nAges, n=10, pi=as.vector(unlist(Res$PropAtAge[1,])), theta=theta_val)
simAges = data.frame(simDat$data)
colnames(simAges)=Ages
ObsAgeFreq = as.vector(colSums(simAges))
Init_FMort = 0.1
Init_SelA50 = 5
Init_SelDelta = 2
Init_theta = 0.35
Init_theta_logit = log(Init_theta/(1-Init_theta)) # logit transform (so theta is always between 0 and 1)
params = c(log(Init_FMort), log(Init_SelA50), log(Init_SelDelta), Init_theta_logit)
res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
res$ParamEst
res$EffSampSize
# Simulate data from Multinomial distribution (two sexes)
set.seed(123)
MinAge = 1
MaxAge = 40
Ages = MinAge:MaxAge
NatMort <- exp(1.46 - (1.01 * (log(MaxAge)))) # i.e. Hoenig's (1983) eqn for fish
FMort = 0.1
ZMort = FMort + NatMort
SelA50 = c(6,6.5)
SelA95 = c(8,8.5)
SampleSize = 1000 # required sample size. For 2 sex model, same sample size generated for each sex.
Res=SimAgeFreqData(SampleSize, MinAge, MaxAge, SelA50, SelA95, NatMort, FMort)
ObsAgeFreq = Res$CatchSample
# fit model (multinomial distribution - two sexes)
Init_FMort = 0.2
Init_SelA50 = c(5,5)
Init_SelDelta = c(2,2.5)
params = log(c(Init_FMort, Init_SelA50, Init_SelDelta))
res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
res$ParamEst
# Simulate data from Dirichlet multinomial distribution (two sexes)
# two sexes
set.seed(123)
theta_val = 0.3
# Females
simDat_Fem = simPop(J=50, K=nAges, n=10, pi=as.vector(unlist(Res$PropAtAge[1,])), theta=theta_val)
simAges_Fem = data.frame(simDat_Fem$data)
colnames(simAges_Fem)=Ages
ObsAgeFreq_Fem = as.vector(colSums(simAges_Fem))
# Males
simDat_Mal = simPop(J=50, K=nAges, n=10, pi=as.vector(unlist(Res$PropAtAge[2,])), theta=theta_val)
simAges_Mal = data.frame(simDat_Mal$data)
colnames(simAges_Mal)=Ages
ObsAgeFreq_Mal = as.vector(colSums(simAges_Mal))
ObsAgeFreq = t(data.frame(ObsAgeFreq_Fem,ObsAgeFreq_Mal))
colnames(ObsAgeFreq)=Ages
# fit model (Dirichlet multinomial distribution - two sexes)
Init_FMort = 0.1
Init_SelA50 = c(5,5)
Init_SelDelta = c(2.5,2.5)
Init_theta = 0.3
Init_theta_logit = log(Init_theta/(1-Init_theta)) # logit transform (so theta is always between 0 and 1)
params = c(log(Init_FMort), log(Init_SelA50), log(Init_SelDelta), Init_theta_logit)
res=GetLogisticCatchCurveResults(params, NatMort, Ages, ObsAgeFreq)
res$ParamEst
res$EffSampSize
}
