% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/L3Analyses.R
\name{GetLengthBasedCatchCurveResults}
\alias{GetLengthBasedCatchCurveResults}
\title{Get results for a fitted length-based catch curve}
\usage{
GetLengthBasedCatchCurveResults(
  params,
  DistnType,
  GrowthCurveType,
  GrowthParams,
  RefnceAges,
  MLL,
  SelectivityType,
  ObsRetCatchFreqAtLen,
  lbnd,
  ubnd,
  midpt,
  SelectivityAtLen,
  PropReleased,
  ObsDiscCatchFreqAtLen,
  DiscMort,
  CVSizeAtAge,
  MaxAge,
  NatMort,
  TimeStep
)
}
\arguments{
\item{params}{vector of model parameters in log space (params) to be estimated}

\item{DistnType}{1 = Multinomial, 2 = Dirichlet multinomial}

\item{GrowthCurveType}{1 = von Bertalanffy, 2 = Schnute}

\item{GrowthParams}{c(Linf, vbK, CVSizeAtAge) single sex von Bertalanffy, or data.frame(Linf=Linf, vbK=vbK, CVSizeAtAge=CVSizeAtAge),
both sexes von Bertalanffy, or c(y1, y2, a, b) single sex Schnute, or data.frame(y1=y1, y2=y2, a=a, b=b), both sexes Schnute}

\item{RefnceAges}{reference ages for Schnute function (set to NA if growth based on another function)}

\item{MLL}{minimum legal length (for setting knife edge retention, set to NA if not assumed)}

\item{SelectivityType}{1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve}

\item{ObsRetCatchFreqAtLen}{observed frequency of fish at length in sample}

\item{lbnd}{lower bounds of length classes}

\item{ubnd}{upper bounds of length classes}

\item{midpt}{mid points of length classes}

\item{SelectivityAtLen}{selectivity at length}

\item{PropReleased}{proportion of fish that are released}

\item{ObsDiscCatchFreqAtLen}{proportion of fish that are released}

\item{DiscMort}{Proportion of fish that die following to capture and release}

\item{CVSizeAtAge}{coefficient of variation (CV), common across all mean lengths at age}

\item{MaxAge}{maximum age considered in model}

\item{NatMort}{natural mortality}

\item{TimeStep}{model timestep (e.g. 1 = annual, 1/12 = monthly)}
}
\value{
negative log-likelihood (nll), nlminb convergence diagnostic (convergence)
sample size (SampleSize), growth parameter estimates with lower and upper 95 percent
confidence limits (ParamEst), point estimates for estimated parameters (params)
and variance-covariance matrix (vcov.Params), gear selectivity at length (SelAtLength), retention at length (RetAtLength),
selectivity of landings at length (SelLandAtLength), growth curve (MeanSizeAtAge), midpoint of each length class (midpt),
mean length after 1 year from growth curve, given initial length (MeanEndingLength), mean change in length after 1 year,
from initial length - note, assuming normal a distribution allows for possibility of negative growth
if above asymptotic length (TimestepGrowthSizeInc), length distribution of 1+ year old recruits (RecLenDist),
expected retained catches, at length (RetCatchAtLen), expected discarded catch at length (DiscCatchAtLen),
expected total (discard plus retained) catches at length (TotCatchAtLen), proportion of catch in each length classes for sexes combined
and separate (ExpRetCatchPropInLenClass, ExpRetCatchPropInLenClass_Fem, ExpRetCatchPropInLenClass_Mal),
expected retained catch proportions given integer age (ExpRetCatchPropLengthGivenIntAge, ExpRetCatchPropLengthGivenIntAge_Fem,
ExpRetCatchPropLengthGivenIntAge_Mal), observed catch in each length class for sexes combined (ObsRetCatchFreqAtLen), CV for modelled lengthsat age, around mean
length at MaxAge, for sexes combined or separate (CV_LenAtMaxAge, FemCV_LenAtMaxAge, MalCV_LenAtMaxAge), fishing mortality
at length, for sexes combined or separate (FAtLen, FAtLen_Fem, FAtLen_Mal), total mortality at length, for sexes combined
or separate (ZAtLen, ZAtLen_Fem, ZAtLen_Mal), fishing mortality associated with landings at length, for sexes combined or
separate (FAtLen, FAtLen_Fem, FAtLen_Mal), fishing mortality associated with capture and retention at length, for sexes combined or
separate (FAtLenReten, FAtLenReten_Fem, FAtLenReten_Mal), fishing mortality associated with capture and discarding at
length, for sexes combined or separate (FAtLenDisc, FAtLenDisc_Fem, FAtLenDisc_Mal)
}
\description{
This function fits a length-based catch curve with length-based selectivity, based on
either 1) specified length-based selectivity inputted as a vector, or 2) an estimated asymptotic logistic
selectivity curve, and specified growth curve (either von Bertalanffy or Schnute growth model). The model is
fited to a sample of fish length frequency data, by minimising the negative log-likelihood associated
with the parameters and data, using nlminb. It provides various statistical outputs in include
convergence statistics, parameter estimates and associated 95 percent confidence limits and associated
variance-covariance matrix, calculated using the MASS package. Note, model is not suited to hermaphroditic species
with sexually divergent growth.
}
\examples{
# Simulate data
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(NA, NA) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                         SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# 2 sexes, von Bertalanffy
DistnType = 1 # 1 = Multinomial, 2 = Dirichlet multinomial
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = c(700,850)
vbK = c(0.3,0.2)
CVSizeAtAge = c(0.08,0.08)
GrowthParams = data.frame(Linf=Linf, vbK=vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                         SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# 1 sex, Schnute
DistnType = 1 # 1 = Multinomial, 2 = Dirichlet multinomial
GrowthCurveType = 2 # 1 = von Bertalanffy, 2 = Schnute
t1 = 0.5 # growth - Schnute
t2 = 25 # growth - Schnute
y1 = 100 # growth - Schnute
y2 = 1000 # growth - Schnute
a = 0.02 # growth - Schnute
b = 3.0 # growth - Schnute
GrowthParams = c(y1, y2, a, b)
RefnceAges = c(t1,t2)
CVSizeAtAge = 0.05
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                         SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# 2 sexes, Schnute
DistnType = 1 # 1 = Multinomial, 2 = Dirichlet multinomial
GrowthCurveType = 2 # 1 = von Bertalanffy, 2 = Schnute
t1 = c(0.5,0.5) # growth - Schnute
t2 = c(25,25) # growth - Schnute
y1 = c(100,100) # growth - Schnute
y2 = c(1000,1000) # growth - Schnute
a = c(0.02,0.02) # growth - Schnute
b = c(3,3) # growth - Schnute
CVSizeAtAge = c(0.05, 0.05)
GrowthParams = data.frame(y1=y1, y2=y2, a=a, b=b)
RefnceAges = data.frame(t1=t1,t2=t2)
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                         SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsRetCatchFreqAtLen = Res$ObsRetCatchFreqAtLen
ObsDiscCatchFreqAtLen = NA # (or set to Res$ObsDiscCatchFreqAtLen)
PropReleased = NA # proportion of fish released, vector including mean and sd (option probably now obsolete)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 400
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
# if estimating both selectivity and retention parameters
# InitL50Ret = 410
# InitDeltaRet = 60
# params = c(InitFishMort_logit, log(InitL50), log(InitDelta), log(InitL50Ret), log(InitDeltaRet))
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
                                    lbnd, ubnd, midpt, SelectivityAtLen, PropReleased, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)

# Example with selectivity specified as a vector
# Simulate data
SampleSize=1000
set.seed(123)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=1 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
lbnd = seq(0,MaxLen - LenInc, LenInc)
midpt = lbnd + (LenInc/2)
# # single sex selectivity input
# SelectivityAtLen = 1 / (1 + exp(-log(19)*(midpt-400)/(500-400)))
# two sex selectivity input
FemSelAtLen = 1 / (1 + exp(-log(19)*(midpt-400)/(500-400)))
MalSelAtLen = 1 / (1 + exp(-log(19)*(midpt-450)/(550-450)))
SelectivityAtLen = t(data.frame(FemSelAtLen=FemSelAtLen,MalSelAtLen=MalSelAtLen))
colnames(SelectivityAtLen) = midpt
SelParams = c(NA, NA) # L50, L95-L50 for gear selectivity
RetenParams = c(NA, NA) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# 2 sexes, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = c(700,850)
vbK = c(0.3,0.2)
CVSizeAtAge = c(0.06,0.06)
GrowthParams = data.frame(Linf=Linf, vbK=vbK)
RefnceAges = NA
SimRes=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                            SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
ObsRetCatchFreqAtLen = SimRes$ObsRetCatchFreqAtLen
ObsDiscCatchFreqAtLen = NA # (or set to Res$ObsDiscCatchFreqAtLen)
PropReleased = NA # proportion of fish released, vector including mean and sd (option probably now obselete)
midpt=SimRes$midpt
lbnd=SimRes$lbnd
ubnd=SimRes$ubnd
DistnType = 1
SelectivityType = 1
# # single sex selectivity input
# SelectivityAtLen = 1 / (1 + exp(-log(19)*(midpt-400)/(500-400)))
# two sex selectivity input
FemSelAtLen = 1 / (1 + exp(-log(19)*(midpt-400)/(500-400)))
MalSelAtLen = 1 / (1 + exp(-log(19)*(midpt-450)/(550-450)))
SelectivityAtLen = t(data.frame(FemSelAtLen=FemSelAtLen,MalSelAtLen=MalSelAtLen))
colnames(SelectivityAtLen) = midpt
# InitL50 = 400
# InitDelta = 50
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
# params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
params = c(InitFishMort_logit)
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
                                          lbnd, ubnd, midpt, SelectivityAtLen, PropReleased, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)

# Fit length-based catch curve to length-frequency data generated from Dirchlet multinomial distribution.
# First, use SimLenAndAgeFreqData function to calculate expected proportions at length
set.seed(123)
SampleSize=5000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 30
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 4.22/MaxAge
FishMort = 0.2
MaxLen = 1200
LenInc = 20
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(300, 50) # L50, L95-L50 for gear selectivity
RetenParams = c(500, 50) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 1 # 1 = von Bertalanffy, 2 = Schnute
Linf = 800
vbK = 0.2
CVSizeAtAge = 0.08
GrowthParams = c(Linf, vbK)
RefnceAges = NA
Res=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                         SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
# Now simulate length-frequency data from Dirchlet multinomial distribution.
set.seed(123)
nSampEvents = 50
nFishPerSampEvent = 20
theta_val = 0.3
midpt = Res$midpt
ExpPropAtLen = Res$ModelDiag$ExpRetCatchPropAtLen
res=SimLenFreqDat_DirMultDistn(nSampEvents, nFishPerSampEvent, theta_val, midpt, ExpPropAtLen)
plot(res$midpt, res$simLenFreq, "o")
# Fit length-based catch curve, assuming Dirichlet multinomial distribution
ObsRetCatchFreqAtLen = res$simLenFreq
ObsDiscCatchFreqAtLen = NA # (or set to Res$ObsDiscCatchFreqAtLen)
PropReleased = NA # proportion of fish released, vector including mean and sd (option probably now obsolete)
midpt=Res$midpt
lbnd=Res$lbnd
ubnd=Res$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 400
InitDelta = 100
DistnType=2
InitTheta = 0.3 # specify starting parameters
InitTheta_logit = log(InitTheta/(1-InitTheta)) # logit transform
params = c(InitFishMort_logit, log(InitL50), log(InitDelta),InitTheta_logit)
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
                                          lbnd, ubnd, midpt, SelectivityAtLen, PropReleased, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)

# Fit model using growth outputs from an analysis of tag-recapture data
library(WAFishBiology)
# Simulate tag-recapture data for growth analysis
set.seed(123)
nstep = 50 # number of steps for numerical integration
MaxLen = 300
Gaussian_A = 0.094
Gaussian_u = 55.33
Gaussian_sd = 53.17
StandDev = 10
GrowthCrvChoice = 2 # 1 = double logistic, 2 = Gaussian function, 3 = von Bertalanffy growth curve, 4 = Gompertz growth curve
params = log(c(Gaussian_A, Gaussian_u, Gaussian_sd, StandDev))
nobs = 500
res=SimulateTagRecaptureData(GrowthCrvChoice, nstep, nobs, MaxLen, params)
plot(res$Obs_Initlen, res$Obs_Finlen, pch=16, cex=0.6)
lines(res$Initlen_line, res$Exp_Finlen2, col="blue")
lines(res$Initlen_line2, res$Exp_Finlen3, col="blue")
MaxAge = 30 # for model
params = log(c(0.1, 60, 50, 8))
Obs_delta_t=res$Obs_delta_t
Obs_Initlen=res$Obs_Initlen
Obs_Finlen=res$Obs_Finlen
# Fit growth model to simulated tag-recapture data
TagRes=GetTaggingGrowthModelResults(params, nstep, Obs_delta_t, Obs_Initlen, Obs_Finlen, MaxAge, MaxLen, nobs)
# Simulate length composition data using estimated growth parameters from tag-recapture growth model
set.seed(123)
SampleSize=2000 # sample size for retained catches (and same number for released fish, if an MLL is specified)
MaxAge = 30 # for model
TimeStep = 1 # model timestep (e.g. 1 = annual, 1/12 = monthly)
NatMort = 0.15 # following Strain et al. 2017
FishMort = 1.5 * NatMort # 0.225
MaxLen = 250
LenInc = 2
MLL=NA # (minimum legal length) # retention set to 1 for all lengths if MLL set to NA and retention parameters not specified
SelectivityType=2 # 1=selectivity inputted as vector, 2=asymptotic logistic selectivity curve
SelectivityAtLen = NA # selectivity vector
SelParams = c(60, 20) # L50, L95-L50 for gear selectivity (somewhere around size when abalone emerge from inside caves to being accessible to fishers)
RetenParams = c(150, 10) # L50, L95-L50 for retention
DiscMort = 0 # proportion of fish that die due to natural mortality
# single sex, von Bertalanffy
GrowthCurveType = 3 # 1 = von Bertalanffy, 2 = Schnute, 3 = Growth from length increment data
CVSizeAtAge = 0.05
# get outputs from tag-recapture growth model
InitLen = TagRes$plot_Init_Length
MeanSizeAtAge_TagRes = TagRes$plot_EstLenAtIntAge
AnnualGrowthInc_TagRes = TagRes$plot_Length_Inc
MeanEndingLength = TagRes$plot_Init_Length + TagRes$plot_Length_Inc
# get annual growth increments for midpoints of specified length classes, for use
# in length-based catch curve model, and length-based per recruit model
lbnd = seq(0,MaxLen - LenInc, LenInc)
midpt = lbnd + (LenInc/2)
nLenCl = length(midpt)
TimestepGrowthSizeInc_TagRes=rep(0,nLenCl)
k=0
for (i in 1:nLenCl) {
  k=k+1
  TimestepGrowthSizeInc_TagRes[k]=AnnualGrowthInc_TagRes[which(InitLen==midpt[i])]
}
MeanEndingLength_TagRes = midpt + TimestepGrowthSizeInc_TagRes
plot(midpt,TimestepGrowthSizeInc_TagRes)
plot(midpt,MeanEndingLength_TagRes)
# specify required growth inputs for simulating length data
MeanSizeAtAge = MeanSizeAtAge_TagRes[2:length(MeanSizeAtAge_TagRes)] # removing size at age zero, as model starts at age 1
GrowthParams = list(MeanSizeAtAge=MeanSizeAtAge, TimestepGrowthSizeInc=TimestepGrowthSizeInc_TagRes, MeanEndingLength=MeanEndingLength_TagRes)
RefnceAges = NA
SimRes=SimLenAndAgeFreqData(SampleSize, MaxAge, TimeStep, NatMort, FishMort, MaxLen, LenInc, MLL, SelectivityType,
                            SelParams, RetenParams, SelectivityAtLen, DiscMort, GrowthCurveType, GrowthParams, RefnceAges, CVSizeAtAge)
DistnType = 1 # 1 = Multinomial, 2 = Dirichlet multinomial
GrowthCurveType = 3 # 1 = von Bertalanffy, 2 = Schnute, 3 = any model with annual mean length increment input
ObsRetCatchFreqAtLen = SimRes$ObsRetCatchFreqAtLen
ObsDiscCatchFreqAtLen = NA # (or set to Res$ObsDiscCatchFreqAtLen)
PropReleased = NA # proportion of fish released, vector including mean and sd (option probably now obsolete)
midpt=SimRes$midpt
lbnd=SimRes$lbnd
ubnd=SimRes$ubnd
InitFishMort = 0.25 # specify starting parameters
InitFishMort_logit = log(InitFishMort/(1-InitFishMort)) # logit transform
InitL50 = 400
InitDelta = 100
params = c(InitFishMort_logit, log(InitL50), log(InitDelta))
FittedRes=GetLengthBasedCatchCurveResults(params, DistnType, GrowthCurveType, GrowthParams, RefnceAges, MLL, SelectivityType, ObsRetCatchFreqAtLen,
                                          lbnd, ubnd, midpt, SelectivityAtLen, PropReleased, ObsDiscCatchFreqAtLen, DiscMort, CVSizeAtAge, MaxAge, NatMort, TimeStep)
}
